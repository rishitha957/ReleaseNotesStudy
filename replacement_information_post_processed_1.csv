Community Updates â€” Requests 2.25.1 documentation,"['when passed objects that throw exceptions from tell, send them via chunked transfer encoding instead of failing.']","['clean up connections when we hit problems during chunked upload, rather than leaking them.']"
Release notes â€” pandas 1.2.4 documentation,['the parameter numeric_only of categorical.min and categorical.max is deprecated and replaced with skipna '],['the type import pandas.tslib.nattype is deprecated and can be replaced by using type '],['apply_index is deprecated and will be removed in a future version. use offset + other instead '],"[' futurewarning: pd.rolling_mean is deprecated for dataframe and will be removed in a future version, replace with']",['the method name index.sym_diff is deprecated and can be replaced by index.symmetric_difference '],"['dateoffset.__call__ is deprecated and will be removed in a future version, use offset + other instead ']",['the null_counts parameter of dataframe.info is deprecated and replaced by show_counts. it will be removed in a future version '],"['dataframe and panel constructors with invalid input will now raise valueerror rather than pandas.core.common.pandaserror, if called with scalar inputs and not axes; the exception pandaserror is removed as well. ']","['added top-level function read_excel to replace the following, the original api is deprecated and will be removed in a future version']",['the top-level pd.value_range has been deprecated and can be replaced by .describe '],"['dataframe.lookup is deprecated and will be removed in a future version, use dataframe.melt and dataframe.loc instead ']","['datetimearray.week and datetimearray.weekofyear are deprecated and will be removed in a future version, use datetimearray.isocalendar.week instead ']","['categorical.to_dense is deprecated and will be removed in a future version, use np.asarray instead ']","['pandas.tseries.frequencies.get_offset is deprecated and will be removed in a future version, use pandas.tseries.frequencies.to_offset instead ']","['timedelta.resolution is deprecated and replaced with timedelta.resolution_string. in a future version, timedelta.resolution will be changed to behave like the standard library datetime.timedelta.resolution ']","['the index set operations + and - were deprecated in order to provide these for numeric type operations on certain index types. + can be replaced by .union or |, and - by .difference. further the method name index.diff is deprecated and can be replaced by index.difference ']",['setting values with .loc using a positional slice is deprecated and will raise in a future version. use .loc with labels or .iloc with positions instead '],"['multiindex.labels has been deprecated and replaced by multiindex.codes. the functionality is unchanged. the new name better reflects the natures of these codes and makes the multiindex api more similar to the api for categoricalindex . as a consequence, other uses of the name labels in multiindex have also been deprecated and replaced with codes:']","['datetimeindex.week and datetimeindex.weekofyear are deprecated and will be removed in a future version, use datetimeindex.isocalendar.week instead ']","['dataframe.tshift and series.tshift are deprecated and will be removed in a future version, use dataframe.shift and series.shift instead ']",['datetimeindex.to_perioddelta is deprecated and will be removed in a future version. use index - index.to_period.to_timestamp instead '],['pandas.api.types.is_categorical is deprecated and will be removed in a future version; use pandas.api.types.is_categorical_dtype instead '],"['the how keyword in periodindex.astype is deprecated and will be removed in a future version, use index.to_timestamp instead ']",['pandas.parser.overflowerror exception has been removed and has been replaced with python s built-in overflowerror exception '],"['series.dt.week and series.dt.weekofyear are deprecated and will be removed in a future version, use series.dt.isocalendar.week instead ']",['the pivot_table/dataframe.pivot_table and crosstab functions now take arguments index and columns instead of rows and cols. a futurewarning is raised to alert that the old rows and cols arguments will not be supported in a future release '],"['dateoffset.isanchored and datetoffset.onoffset are deprecated and will be removed in a future version, use dateoffset.is_anchored and dateoffset.is_on_offset instead ']","['for method multiindex.copy, the labels parameter has been deprecated and replaced by a codes parameter.']",['datetimeindex.shift and periodindex.shift now accept periods argument instead of n for consistency with index.shift and series.shift. using n throws a deprecation warning '],"['index.is_mixed is deprecated and will be removed in a future version, check index.inferred_type directly instead ']","[' will be removed in a future version, replace with']","[' will be removed in a future version, replace with']","['date parser functions parse_date_time, parse_date_fields, parse_all_fields and generic_parser from pandas.io.date_converters are deprecated and will be removed in a future version; use to_datetime instead ']",['the tz keyword in period.to_timestamp is deprecated and will be removed in a future version; use per.to_timestamp.tz_localize instead '],"['support for multi-dimensional indexing on a index is deprecated and will be removed in a future version, convert to a numpy array before indexing instead ']",['futurewarning: select is deprecated and will be removed in a future release. you can use .loc as a replacement'],"['bug in period and periodindex creation raises keyerror if freq=""minute"" is specified. note that minute freq is deprecated in v0.17.0, and recommended to use freq=""t"" instead ']","['the functions pd.rolling_*, pd.expanding_*, and pd.ewm* are deprecated and replaced by the corresponding method call. note that the new suggested syntax includes all of the arguments ']",['pandas.json_normalize is now exposed in the top-level namespace. usage of json_normalize as pandas.io.json.json_normalize is now deprecated and it is recommended to use json_normalize as pandas.json_normalize instead .'],['the dataframe.drop_duplicates and dataframe.duplicated methods now take argument subset instead of cols to better align with dataframe.dropna. a futurewarning is raised to alert that the old cols arguments will not be supported in a future release '],"['removed the previously deprecated keyword pat from series.str.partition and series.str.rpartition, use sep instead ']","[""the default for pd.to_datetime error handling has changed to errors='raise'. in prior versions it was errors='ignore'. furthermore, the coerce argument has been deprecated in favor of errors='coerce'. this means that invalid parsing will raise rather that return the original input as in previous versions. ""]",['new datetimeindex class supports both fixed frequency and irregular time series. replaces now deprecated daterange class'],['the parallel_coordinates and andrews_curves functions now take positional argument frame instead of data. a futurewarning is raised if the old data argument is used by name. '],['the parallel_coordinates and andrews_curves functions now take positional argument frame instead of data. a futurewarning is raised if the old data argument is used by name. '],"['deprecated indexing dataframe rows with a single datetime-like string as df , use df.loc instead ']","['removed the previously deprecated keyword index from read_stata, statareader, and statareader.read, use index_col instead ']","['the options html.border and mode.use_inf_as_null were deprecated in prior versions, these will now show futurewarning rather than a deprecationwarning ']","[""removed the warn argument from open. instead a possibledatalosserror exception will be raised if you try to use mode='w' with an open file handle ""]","['removed the previously deprecated keyword n from datetimeindex.shift, timedeltaindex.shift, periodindex.shift, use periods instead ']","['removed the previously deprecated keyword by from dataframe.sort_index, use dataframe.sort_values instead ']","['removed the previously deprecated keyword raise_conflict from dataframe.update, use errors instead ']",['named aggregation is the recommended replacement for the deprecated dict-of-dicts approach to naming the output of column-specific aggregations with a dictionary when renaming).'],"['removed the previously deprecated keyword data from parallel_coordinates, use frame instead ']","['in 0.15.0 index has internally been refactored to no longer sub-class ndarray but instead subclass pandasobject, similarly to the rest of the pandas objects. this change allows very easy sub-classing and creation of new index types. this should be a transparent change with only very limited api implications :']","['removed the previously deprecated keywords start , end , and periods from the datetimeindex, timedeltaindex, and periodindex constructors; use date_range, timedelta_range, and period_range instead ']","['the default value for the return_type parameter for dataframe.plot.box and dataframe.boxplot changed from none to ""axes"". these methods will now return a matplotlib axes by default instead of a dictionary of artists. see here .']","['removed the previously deprecated keyword colors from parallel_coordinates, use color instead ']","['in 0.15.0 index has internally been refactored to no longer sub-class ndarray but instead subclass pandasobject, similarly to the rest of the pandas objects. this change allows very easy sub-classing and creation of new index types. this should be a transparent change with only very limited api implications ']","['indexing an index object with a float key is deprecated, and will raise an indexerror in the future. you can manually convert to an integer key instead .']",['deprecated parameters levels and codes in multiindex.copy. use the set_levels and set_codes methods instead '],"['removed the previously deprecated keyword data from andrews_curves, use frame instead ']","['lookups on a series with a single-item list containing a slice ]]) are deprecated and will raise in a future version. either convert the list to a tuple, or pass the slice directly instead ']",['removed the previously deprecated keyword join_axes from concat; use reindex_like on the result instead '],['the pandas.io.data package is deprecated and will be replaced by the pandas-datareader package. this will allow the data modules to be independently updated to your pandas installation. the api for pandas-datareader v0.1.1 is exactly the same as in pandas v0.17.0 .'],"[""dataframe.to_csv now uses os.linesep rather than '\\n' for the default line terminator . this change only affects when running on windows, where '\\r\\n' was used for line terminator even when '\\n' was passed in line_terminator.""]","['the major change that may affect you in pandas 0.8.0 is that time series indexes use numpy s datetime64 data type instead of dtype=object arrays of python s built-in datetime.datetime objects. daterange has been replaced by datetimeindex but otherwise behaved identically. but, if you have code that converts daterange or index objects that used to contain datetime.datetime values to plain numpy arrays, you may have bugs lurking with code using scalar values because you are handing control over to numpy:']",['removed the previously deprecated keyword skip_footer from read_excel; use skipfooter instead '],"[""the infer_dst argument in tz_localize will be deprecated in favor of ambiguous to allow for more flexibility in dealing with dst transitions. replace infer_dst=true with ambiguous='infer' for the same behavior . see the docs for more details.""]","['in 0.13.0 series has internally been refactored to no longer sub-class ndarray but instead subclass ndframe, similar to the rest of the pandas containers. this should be a transparent change with only very limited api implications. see internal refactoring']","['.values is changed to return an array of period objects, rather than an array of integers .']","['bug in groupby where callable objects without name attributes would take the wrong path, and produce a dataframe instead of a series ']","['the dataframe.infer_objects and series.infer_objects methods have been added to perform dtype inference on object columns, replacing some of the functionality of the deprecated convert_objects method. see the documentation here for more details. ']",['diff will raise a typeerror rather than implicitly losing the dtype of extension types in the future. convert to the correct dtype before calling diff instead '],"['show a futurewarning rather than a deprecationwarning on using long-time deprecated syntax in hdfstore.select, where the where clause is not a string-like ']","['removed the previously deprecated keyword fill_value from categorical.fillna, use value instead ']","['previously, pandas would register converters with matplotlib as a side effect of importing pandas . this changed the output of plots made via matplotlib plots after pandas was imported, even if you were using matplotlib directly rather than plot.']",['categorical.name was deprecated to make categorical more numpy.ndarray like. use series instead .'],"['index methods &, |, and ^ behaving as the set operations index.intersection, index.union, and index.symmetric_difference, respectively, are deprecated and in the future will behave as pointwise boolean operations matching series behavior. use the named set methods instead ']","['previously, when using certain iteration methods for a series with dtype int or float, you would receive a numpy scalar, e.g. a np.int64, rather than a python int. issue corrected this for series.tolist and list. this change makes all iteration methods consistent, in particular, for __iter__ and .map; note that this only affects int/float dtypes. .']","['removed index.dtype_str, use str instead ']","['removed the previously deprecated keyword labels from the multiindex constructor, use codes instead ']",['compat with scipy > 0.17 for deprecated piecewise_polynomial interpolation method; support for the replacement from_derivatives method '],['pd.ordered_merge has been removed . use pd.merge_ordered instead '],"['removed the previously deprecated keyword nthreads from read_feather, use use_threads instead ']","['the deprecated internal attributes _start, _stop and _step of rangeindex now raise a futurewarning instead of a deprecationwarning ']",['changed caching in abstractholidaycalendar to be at the instance level rather than at the class level as the latter can result in unexpected behaviour. '],"['dataframe.unstack and series.unstack now take fill_value keyword to allow direct replacement of missing values when an unstack results in missing values in the resulting dataframe. as an added benefit, specifying fill_value will preserve the data type of the original stacked data. ']",['pandas.read_excel has deprecated accepting usecols as an integer. please pass in a list of ints from 0 to usecols inclusive instead '],['bug in dataframe.replace where changing a dtype through replacement would only replace the first occurrence of a value '],['bug in timestamp.replace when replacing tzinfo around dst changes '],"['removed pandas.plotting._matplotlib.tsplot, use series.plot instead ']","['bug in putting a periodindex into a series would convert to int64 dtype, rather than object of periods ']","['removed index.contains, use key in index instead ']","['the shift method now accepts fill_value as an argument, allowing the user to specify a value which will be used instead of na/nat in the empty periods. ']",['indexing a series with a multi-dimensional indexer like to return an ndarray now raises a futurewarning. convert to a numpy array before indexing instead '],"['shift will now always return a copy, instead of the previous behaviour of returning self when shifting by 0 ']",['pd.tseries.util.pivot_annual has been removed . use pivot_table instead '],"['removed the previously deprecated keyword labels from multiindex.set_codes, multiindex.copy, multiindex.drop, use codes instead ']","['removed index.get_duplicates, use idx.unique instead ']",['deprecated parameter dtype of method copy for all index subclasses. use the astype method instead for changing dtype ']
fire Â· PyPI
ccxt Â· PyPI
Changelog â€” beets 1.4.9 documentation,"['fuzzy search plugin: the fuzzy command was removed and replaced with a new query type. to perform fuzzy searches, use the ~ prefix with list or other commands. thanks to philippe mongeau.']",['the default replace sanitation options now remove leading whitespace by default. thanks to brilnius.'],"['the directory hierarchy can now be customized based on release type. in particular, the path_format setting in .beetsconfig has been replaced with a new section, which allows you to specify different path formats for normal and compilation releases as well as for each album type . the default path formats have been changed to use $albumartist instead of $artist.']","['the default filename character substitutions were changed to be more conservative. the windows reserved characters are substituted by default even on unix platforms . to customize your character substitutions, see the replace config option.']","['when previewing changes during import, differences in track duration are now shown as 2:50 vs. 3:10 rather than separated with -> like track numbers. this should clarify that beets isn t doing anything to modify lengths.']","['scrub plugin: scrubbing now removes all types of tags from a file rather than just one. for example, if your flac file has both ordinary flac tags and id3 tags, the id3 tags are now also removed.']","['track length is now displayed as m:ss rather than a raw number of seconds. queries on track length also accept this format: for example, beet list length:5:30.. will find all your tracks that have a duration over 5 minutes and 30 seconds. you can turn off this new behavior using the format_raw_length configuration option. #1749']","['smart playlist plugin: playlist updating should now be faster: the plugin detects, for each playlist, whether it needs to be regenerated, instead of obliviously regenerating all of them. the splupdate command can now also take additional parameters that indicate the names of the playlists to regenerate.']",['ftintitle plugin: a new option lets you remove featured artists entirely instead of moving them to the title. thanks to sutjael.'],"['relatedly, the -l flag to the import command makes it take a query as its argument instead of a list of directories. the matched albums are then re-imported.']",['the replace configuration option can now remove characters entirely if the special string <strip> is specified as the replacement.'],"['convert plugin: you can now transcode files to any audio format, rather than just mp3. thanks again to rowan lewis.']",['convert plugin: the default configuration uses ffmpeg s built-in aac codec instead of faac. thanks to jansol. #2484']
CHANGELOG - AllenNLP v2.4.0,"['added a filelock class to common.file_utils. this is just like the filelock from the filelock library, except that it adds an optional flag read_only_ok: bool, which when set to true changes the behavior so that a warning will be emitted instead of an exception when lacking write permissions on an existing file lock. this makes it possible to use the filelock class on a read-only file system.']","['added a filelock class to common.file_utils. this is just like the filelock from the filelock library, except that it adds an optional flag read_only_ok: bool, which when set to true changes the behavior so that a warning will be emitted instead of an exception when lacking write permissions on an existing file lock. this makes it possible to use the filelock class on a read-only file system.']",['remove temporary directory when extracting model archive in load_archive at end of function rather than via atexit.']
Theano Release Notes :: NVIDIA Deep Learning Frameworks Documentation
Releases | Apache Arrow,"['arrow-7495 - remove empty concept from arrowbuf, replace with custom referencemanager']",['arrow-6350 - remove arrow::struct and use hash instead'],['arrow-2555 - provide an option to convert on coerce_timestamps instead of error'],['arrow-11790 - change plan builder signature to take vec<expr> rather than &'],['arrow-10261 - lists should take field instead of datatype']
Release notes - Albumentations Documentation
Changelog â€” Paramiko documentation,"[' #667: the rc4/arcfour family of ciphers has been broken since version 2.0; but since the algorithm is now known to be completely insecure, we are opting to remove support outright instead of fixing it. thanks to alex gaynor for catch & patch.']","[' #667: the rc4/arcfour family of ciphers has been broken since version 2.0; but since the algorithm is now known to be completely insecure, we are opting to remove support outright instead of fixing it. thanks to alex gaynor for catch & patch.']",[' #402: check to see if an ssh agent is actually present before trying to forward it to the remote end. this replaces what was usually a useless typeerror with a human-readable authenticationexception. credit to ken jordan for the fix and yvan marques for original report.'],[' #402: check to see if an ssh agent is actually present before trying to forward it to the remote end. this replaces what was usually a useless typeerror with a human-readable authenticationexception. credit to ken jordan for the fix and yvan marques for original report.'],[' #402: check to see if an ssh agent is actually present before trying to forward it to the remote end. this replaces what was usually a useless typeerror with a human-readable authenticationexception. credit to ken jordan for the fix and yvan marques for original report.'],"[' #1041: modify logic around explicit disconnect messages, and unknown-channel situations, so that they rely on centralized shutdown code instead of running their own. this is at worst removing some unnecessary code, and may help with some situations where paramiko hangs at the end of a session. thanks to paul kapp for the patch.']",[' #266: change numbering of transport channels to start at 0 instead of 1 for better compatibility with openssh & certain server implementations which break on 1-indexed channels. thanks to @egroeper for catch & patch.'],[' #266: change numbering of transport channels to start at 0 instead of 1 for better compatibility with openssh & certain server implementations which break on 1-indexed channels. thanks to @egroeper for catch & patch.'],[' #266: change numbering of transport channels to start at 0 instead of 1 for better compatibility with openssh & certain server implementations which break on 1-indexed channels. thanks to @egroeper for catch & patch.'],"[' #267: add gss-api / sspi key exchange and authentication support . mega thanks to sebastian dei , with assist by torsten landschoff.']",[' #356: add support for sha-2 based key exchange algorithm diffie-hellman-group-exchange-sha256 and mac algorithms hmac-sha2-256 and hmac-sha2-512.'],"['this technically changes behavior, insofar as very slow auth steps >30s will now cause timeout exceptions instead of completing. we doubt most users will notice; those affected can simply give a higher value to auth_timeout.']","[' #951: add support for ecdh key exchange , specifically the algorithms ecdh-sha2-nistp256, ecdh-sha2-nistp384, and ecdh-sha2-nistp521. they now come before the older diffie-hellman-* family of kex algorithms in the preferred-kex list. thanks to shashank veerapaneni for the patch & pierce lopez for a follow-up.']",[' #532: add support for curve25519 key exchange . thanks to alex gaynor and dan fuhry for supplying patches.'],[' #1233: add support for encrypt-then-mac schemes and two newer diffie-hellman group key exchange algorithms . patch courtesy of edgar sousa.'],"[' #1060: fix key exchange algorithm list for gssapi authentication; previously, the list used solely out-of-date algorithms, and now contains newer ones listed preferentially before the old. credit: anselm kruis.']","[' #1060: fix key exchange algorithm list for gssapi authentication; previously, the list used solely out-of-date algorithms, and now contains newer ones listed preferentially before the old. credit: anselm kruis.']","[' #1060: fix key exchange algorithm list for gssapi authentication; previously, the list used solely out-of-date algorithms, and now contains newer ones listed preferentially before the old. credit: anselm kruis.']"
Altair Change Log â€” Altair 4.1.0 documentation
Release notes â€” Scrapy 2.5.0 documentation,['concurrent_requests_per_spider setting has been deprecated and replaced by:'],['the previously bundled scrapy.xlib.pydispatch library was deprecated and replaced by pydispatcher.'],"['the spiders property has been removed from crawler, use crawlerrunner.spider_loader or instantiate spider_loader_class with your settings instead ']","['assertionerror exceptions triggered by assert statements have been replaced by new exception types, to support running python in optimized mode without changing scrapy s behavior in any unexpected ways.']",['removed deprecated core.signals.domain_open signal - use core.signals.domain_opened instead '],"['when uploading files or images to s3 , the default acl policy is now private instead of public warning: backward incompatible!. you can use files_store_s3_acl to change it.']",['removed deprecated scrapy.item.scrapeditem class - use scrapy.item.item instead '],['removed deprecated scrapysettings_module environment variable - use scrapy_settings_module instead '],"['while these are not changes in scrapy itself, but rather in the parsel library which scrapy uses for xpath/css selectors, these changes are worth mentioning here. scrapy now depends on parsel >= 1.5, and scrapy documentation is updated to follow recent parsel api conventions.']","['by default, logger names now use a long-form path, e.g. , instead of the shorter top-level variant of prior releases ; this is backward incompatible if you have log parsers expecting the short logger name part. you can switch back to short logger names using log_short_names set to true.']",['changed stats api to use spiders instead of domains '],['removed obsolete scrapy.utils.markup.remove_escape_chars function - use scrapy.utils.markup.replace_escape_chars instead '],['changed item pipeline to use spiders instead of domains'],"['replaced memory usage acounting with resource module, removed scrapy.utils.memory module']"
Changes â€” Werkzeug Documentation (2.1.x),['test.environbuilder and test.client take a json argument instead of manually passing data and content_type. this is serialized using the test.environbuilder.json_dumps method. '],['overhauled the utilization of the input stream to be easier to use and better to extend. the detection of content payload on the input side is now more compliant with http by detecting off the content type header instead of the request method. this also now means that the stream property on the request class is always available instead of just when the parsing fails.'],"['for example, instead of import werkzeug; werkzeug.url_quote, do from werkzeug.urls import url_quote. a deprecation warning will show the correct import to use. werkzeug.exceptions and werkzeug.routing should also be imported instead of accessed, but for technical reasons can t show a warning.']",['fix an issue where sys.path would change between reloads when running with python -m app. the reloader can detect that a module was run with -m and reconstructs that instead of the file path in sys.argv when reloading. '],['moved limitedstream from the contrib package into the regular werkzeug one and changed the default behavior to raise exceptions rather than stopping without warning. the old class will stick in the module until 0.6.'],"['the development server accepts paths that start with two slashes, rather than stripping off the first path segment. #491']",['deprecate the useragents module and the built-in user agent parser. use a dedicated parser library instead by subclassing user_agent.useragent and setting request.user_agent_class. #2078'],"['remove most top-level attributes provided by the werkzeug module in favor of direct imports. for example, instead of import werkzeug; werkzeug.url_quote, do from werkzeug.urls import url_quote. install version 0.16 first to see deprecation warnings while upgrading. #2, #1640']",['removed support for is_behind_proxy. use a wsgi middleware instead that rewrites the remote_addr according to your setup. also see the werkzeug.contrib.fixers.proxyfix for a drop-in replacement.']
Release Notes â€” Featuretools 0.24.0 documentation,['entity.query_by_values has been removed and replaced by entityset.query_by_values with an added entity_id parameter to specify which entity in the entityset should be used for the query.'],['the text variable type has been deprecated and been replaced with the naturallanguage variable type. the text variable type will be removed in a future release.'],['replace pd.timedelta time units that were deprecated '],"['removed feature.get_names, feature.get_feature_names should be used instead']"
Changelog â€” gevent 21.1.3.dev0 documentation
Changelog â€” marshmallow 3.12.1 documentation,['make_object is deprecated. use a post_load method instead . this method will be removed in the final 2.0 release.'],['remove make_object. use a post_load method instead .']
Release History - Stanza
Change log â€” Docker SDK for Python 5.0.0 documentation,"['create_host_config, create_ipam_pool and create_ipam_config have been removed from docker.utils. they have been replaced by the following classes in docker.types: hostconfig, ipampool and ipamconfig.']",['replace use of deprecated filter argument on docker/api/image ']
Upgrade Guide â€” CuPy 9.0.0 documentation,"['for performance reasons, cupy.count_nonzero has been changed to return zero-dimensional ndarray instead of int when axis=none. see the discussion in #154 for more details.']"
Changelog â€” Jedi 0.18.0 documentation
Asyncpg Changelog - pyup.io,"[' * add support for ""tuple"" exchange format for codec overrides.']"
Changelog (Version History) â€” Telethon 1.21.1 documentation,"['other internal changes include a somewhat more readable .to_bytes function and pre-computing the flag instead using bit shifting. the tlobject.constructor_id has been renamed to tlobject.constructor_id, and .subclass_of_id is also uppercase now.']","['.sender is the .chat when the message is sent in a broadcast channel. this makes sense, because the sender of the message was the channel itself, but you now must take into consideration that it may be either a user or channel instead of being none.']",['some important internal changes are that the old way to deal with rsa public keys now uses a different module instead the old strange hand-crafted version.']
Changelog â€” librosa 0.8.0 documentation,"['spectrogram frames are now centered, rather than left-aligned. this removes the need for window correction in librosa.frames_to_time']"
Release History â€” virtualenv 20.4.6.dev2+g7bfd444 documentation
Release history â€” Trio 0.18.0+dev documentation,"[""trio.queue's join and task_done methods are deprecated without replacement ""]","['trio.catch_signals has been deprecated in favor of open_signal_receiver. the main differences are: it takes *-args now to specify the list of signals instead of catch_signals), and, the async iterator now yields individual signals, instead of batches ']"
Changelog - isort
Release Notes â€” MechanicalSoup 1.0.0 documentation
Release Notes - mlxtend,['the onehottransactions has been deprecated and replaced by the transactionencoder. (#332'],"['the stackingclassifier has a new parameter average_probas that is set to true by default to maintain the current behavior. a deprecation warning was added though, and it will default to false in future releases ; average_probas=false will result in stacking of the level-1 predicted probabilities rather than averaging these.']",['the plot_confusion_matrix function now has the ability to show normalized confusion matrix coefficients in addition to or instead of absolute confusion matrix coefficients with or without a colorbar. the text display method has been changed so that the full range of the colormap is used. the default size is also now set based on the number of classes.'],"[""changed the default solver in principalcomponentanalysis to 'svd' instead of 'eigen' to improve numerical stability. ""]"
Version history â€” APScheduler 3.7.0 documentation,"['changed asyncioscheduler to obtain the event loop in start instead of __init__, to prevent situations where the scheduler won t run because it s using a different event loop than then one currently running']"
Changelog â€” websockets 9.0 documentation,"[""changed the origins argument to represent the lack of an origin with none rather than ''.""]",['changed websocketserver.close to perform a proper closing handshake instead of failing the connection.']
Changelog - LSP Mode - LSP support for Emacs,['changed flymake to report the errors immediately after they arrive instead of waiting flymake to call lsp-mode.']
What's New,[' replace ambiguous switch statement default clauses with specific comments'],[' move locals.doc and remove redundant constant descriptions. instead refer'],[' changed the behaviour of clock.tick to use sdl_delay instead of a busy'],[' replace another ambiguous switch statement default clause']
Release Notes :: NVIDIA Deep Learning DALI Documentation,['support operators were removed and their usage replaced with cpu operators. old support operators were converted to cpu operators.'],"['replaced hostdecoder and nvjpegdecoder with generic imagedecoder. imagedecoder is the recommended function for the image decoding, and the replaced apis hostdecoder and nvjpegdecoder will be removed in the future.']",['colortwist operator was deprecated and replaced by brightnesscontrast and hsv operators cleanup '],"['the api for the tensorflow plugin changed to allow specifying the whole shape of the tensor instead of n, h, and w separately; which enables handling both nchw and nhwc outputs.']",['adjusted operator::run to take reference instead of pointer .']
Changelog â€” Dramatiq 1.10.0 documentation
Cerberus Changelog â€” Cerberus is a lightweight and extensible data validation library for Python,['replaced deprecated rule name validator with check_with in the docs '],"[' nullable rule added to allow for null field values to be accepted in validations. this is different than required in that you can actively change a value to none instead of omitting or ignoring it. it is essentially the ignore_none_values, allowing for more fine grained control down to the field level .']",['change allowed rule to use containers instead of lists ']
Changelog â€” Authlib 1.0.0.dev documentation
Changelog â€” pygal 2.0.0 documentation,"['remove datey and replace it by real xy datetime, date, time and timedelta support. ']"
Changelog â€” ELI5 0.11.0 documentation
Changelog â€” LIEF Documentation
Thinc Changelog - pyup.io
pyserial/CHANGES.rst at master Â· pyserial/pyserial Â· GitHub
Pychromecast Changelog - pyup.io,[' * breaking change track services based on uuid instead of mdns service name emontnemery'],['breaking change track services based on uuid instead of mdns service name emontnemery']
Changelog â€” Urwid 2.1.2,['removed util.register_align_mode and util.register_wrap_mode. their functionality has been replaced by the new layout classes.']
Change history â€” Kombu 5.0.2 documentation,['new and better repr for queue and exchange objects.'],['queue_bind is no longer called for queues bound to the default exchange .'],['exchange & queue can now be bound to connections :'],"['added integration tests for direct, topic and fanout exchange types']","['setting this flag means that the exchange will not be declared by kombu, but that it must exist already .']",['when enabled the exchange will work like an amqp topic exchange if the binding key is a pattern.'],"['if when publishing a message, the exchange argument is set to , the routing_key will be regarded as the destination queue.']",['connection: there s now a new method connection.supports_exchange_type that can be used to check if the current transport supports a specific exchange type.'],['add possibility to optimize lookup for queue in direct exchange set.'],['sqlalchemy transport: use query.with_for_update instead of deprecated'],['memory transport now supports the fanout exchange type.'],['redis: the fanout exchange can now use amqp patterns to route and filter messages.'],['simplequeue now allows you to override the exchange type used.']
Changelog â€” django-import-export 2.5.1.dev0 documentation,"['try to use ordereddict instead of sorteddict, which is deprecated in django 1.7 ']"
Release Notes â€” Catalyst 0.5.21 documentation,['multiple algorithms can trade simultaneously against a single exchange using the same account.'],"['changed handling of empty auth.json, instead of throwing an error for missing file']",['added a standardized dictionary of symbols for each exchange'],['raising an error for order amounts smaller than exchange lots'],"['retrieval of crypto benchmark from bundle, instead of hitting poloniex exchange directly']"
viewflow/CHANGELOG.rst at master Â· viewflow/viewflow Â· GitHub,"['all conditions in if, switch and other nodes receives now a node activation instance instead of process. so you can gen an access to the current task via activation.task variable.']"
News â€” pyquery 1.3.x documentation
furl v2.0.0 release notes (2018-10-16) | LibHunt
Whatâ€™s New â€” xlwings dev documentation,[': vba settings: udf_path has been replaced with udf_modules. the default behaviour doesn t change though .']
instagram_private_api/CHANGELOG.md at master Â· ping/instagram_private_api Â· GitHub,['client.standard_ratios and client.reel_ratios is deprecated and replaced with mediaratios.standard and mediaratios.reel respectively.']
Changelog â€” aeneas 1.7.3 documentation,['updated install.md to brew install from daniel bair s tap instead of official brew repo since they removed the formula for aeneas ']
orjson/CHANGELOG.md at master Â· ijl/orjson Â· GitHub
pex/CHANGES.rst at main Â· pantsbuild/pex Â· GitHub,"['the 1.0.0 release of pex introduces a few breaking changes: pex -r now takes requirements.txt files instead of requirement specs, pex -s has now been removed since source specs are accepted as arguments, and pex -p has been removed in favor of its alias pex -o.']","['this ordinarily should not be a problem but the zipimporter caches metadata by filename instead of stat/sha, so if the underlying contents changed a runtime error would be thrown due to seemingly corrupt zip file offsets. rb #684']"
PyFunctional/CHANGELOG.md at master Â· EntilZha/PyFunctional Â· GitHub,['added data interchange tutorial with pandas (link']
javacpp-presets/CHANGELOG.md at master Â· bytedeco/javacpp-presets Â· GitHub,"['remove unneeded @opaque types from gsl and replace them with their definitions whose names end with ""_struct""']"
PyLaTeX/changelog.rst at master Â· JelteF/PyLaTeX Â· GitHub,['for better readability let ~.escape_latex change a newline to \\\\%\\n instead of simply \\\\.']
essentia/Changelog at master Â· MTG/essentia Â· GitHub
Changelog â€” Apache Libcloud 3.3.2-dev documentation,['deprecated lockfile library which is used by the local storage driver has been replaced with fasteners library. '],['replace old enum style provider constants and replace them with a string version. this change allows users to dynamically register new drivers using a new set_driver method. '],"['deprecate rackspace_us and rackspace_uk provider constant and replace it with a new rackspace constant. driver referenced by this new constant takes a region keyword argument which can be one of the following: us , uk .']",[' update oneandone driver to accomodate latest changes to the api. this means removing deprecated ex_remove_server_firewall_policy method and replacing port_from and port_to argument on the firewall policy with a single port attribute. '],"['deprecate cloudfiles_us and cloudfiles_uk provider constant and replace it with a new cloudfiles constant. driver referenced by this new constant takes a region keyword argument which can be one of ord , dfw , iad , syd , lon .']","['deprecate rackspace_us and rackspace_uk provider constant and replace it with a new rackspace constant. driver referenced by this new constant takes a region keyword argument which can be one of the following: ord , dfw , iad , syd , lon .']",[' update gce and softlayer drivers to utilize crypto primitives from the cryptography library instead of deprecated and unmaintained pycrypto library.'],['modify elasticstack driver class to pass vnc auto instead of vnc:ip auto argument to the api when creating a server. it looks like vnc:ip has been replaced with vnc . '],"['deprecate the following ec2 provider constants: ec2_us_east, ec2_eu, ec2_eu_west, ec2_ap_southeast, ec2_ap_northeast, ec2_us_west_oregon, ec2_sa_east, ec2_sa_east and replace it with a new ec2 constant. driver referenced by this new constant now takes a region argument which dictates to which region to connect.']",['modify values in the record extra dictionary attribute in the zerigo dns driver to be set to none instead of an empty string if a value for the provided key is not set. '],"['deprecate the following elastichosts provider constants: elastichosts_uk1, elastichosts_uk2, elastichosts_us1, elastichosts_us2, elastichosts_us3, elastichosts_ca1, elastichosts_au1, elastichosts_cn1 and replace it with a new elastichosts constant. driver referenced by this new constant now takes a region argument which dictates to which region to connect.']",['modify openstackauthconnection and change auth_token_expires attribute to be a datetime object instead of a string. '],"['current opennebula occi implementation does not support a proper restart method. rather it suspends and resumes. therefore, restart_node has been removed from the opennebula driver. ']","['switch rawresponse class to use content body instead of text body, up to 10x performance improvement for methods like storagedriver.download_object ']",['modify get_container method to use a more efficient head approach instead of calling list_containers + doing late filterting. '],['modify openstackauthconnection to support re-using of the existing auth token if it s still valid instead of re-authenticating on every authenticate call. ']
