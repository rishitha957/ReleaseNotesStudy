Community Updates â€” Requests 2.25.1 documentation,the requests extra is officially deprecated and will be removed in requests v2.26.0.,"fixed regression from 2.12.2 where non-string types were rejected in the basic auth parameters. while support for this behaviour has been readded, the behaviour is deprecated and will be removed in the future.",add deprecation warnings to functions in requests.utils that will be removed in 3.0 ,"when passed objects that throw exceptions from tell, send them via chunked transfer encoding instead of failing.","clean up connections when we hit problems during chunked upload, rather than leaking them.",deprecated invalidmethodexception.
Release notes â€” pandas 1.2.4 documentation,series.str.__iter__ was deprecated and will be removed in future releases .,"removed the previously deprecated keyword index from read_stata, statareader, and statareader.read, use index_col instead ",panel is deprecated and will be removed in a future version. the recommended way to represent 3-d data are with a multiindex on a dataframe via the to_frame or with the xarray package. pandas provides a to_xarray method to automate this conversion .,reindex_axis has been deprecated in favor of reindex. see here for more .,series.is_time_series deprecated in favor of series.index.is_all_dates ,these indexing function have been deprecated in the documentation since 0.11.0.,miscellaneous renames and deprecations which will raise futurewarning,"series.dt.week and series.dt.weekofyear are deprecated and will be removed in a future version, use series.dt.isocalendar.week instead ",removed the warn argument from open. instead a possibledatalosserror exception will be raised if you try to use mode='w' with an open file handle ,"index methods &, |, and ^ behaving as the set operations index.intersection, index.union, and index.symmetric_difference, respectively, are deprecated and in the future will behave as pointwise boolean operations matching series behavior. use the named set methods instead ",the infer_dst argument in tz_localize will be deprecated in favor of ambiguous to allow for more flexibility in dealing with dst transitions. replace infer_dst=true with ambiguous='infer' for the same behavior . see the docs for more details.,"deprecated iterkv, which will be removed in a future release . ","furthermore, pd.to_timedelta has gained a similar api, of errors='raise'|'ignore'|'coerce', and the coerce keyword has been deprecated in favor of errors='coerce'.","removed the previously deprecated keyword box from to_datetime and to_timedelta; in addition these now always returns datetimeindex, timedeltaindex, index, series, or dataframe ","starting in version 0.11.0, these methods may be deprecated in future versions.",categorical.name was deprecated to make categorical more numpy.ndarray like. use series instead .,deprecations will be enforced in major releases ,"bug in period and periodindex creation raises keyerror if freq=""minute"" is specified. note that minute freq is deprecated in v0.17.0, and recommended to use freq=""t"" instead ","attempting to use the xlwt engine will raise a futurewarning unless the option io.excel.xls.writer is set to ""xlwt"". while this option is now deprecated and will also raise a futurewarning, it can be globally set and the warning suppressed. users are recommended to write .xlsx files using the openpyxl engine instead.",legacy offsets are deprecated ,"removed the previously deprecated keywords start , end , and periods from the datetimeindex, timedeltaindex, and periodindex constructors; use date_range, timedelta_range, and period_range instead ",deprecated function,# note that pandas.rpy was deprecated in v0.16.0,"dataframe.to_csv has dropped the engine parameter, as was deprecated in 0.17.1 ","the signature of series.set_axis and dataframe.set_axis has been changed from set_axis to set_axis, for consistency with the rest of the api. the old signature is deprecated and will show a futurewarning ",remove deprecated factor ,eval keyword argument truediv is deprecated and will be removed in a future version ,removal of the previously deprecated as_indexer keyword completely from str.match ,the keep_tz=false option of the keep_tz keyword of datetimeindex.to_series is deprecated .,"calling numpy ufuncs on non-aligned dataframes changed behaviour in pandas 1.2.0 , but this change is reverted in pandas 1.2.1. the behaviour to not align is now deprecated instead, see the the 1.2.1 release notes for more details.","the major change that may affect you in pandas 0.8.0 is that time series indexes use numpy s datetime64 data type instead of dtype=object arrays of python s built-in datetime.datetime objects. daterange has been replaced by datetimeindex but otherwise behaved identically. but, if you have code that converts daterange or index objects that used to contain datetime.datetime values to plain numpy arrays, you may have bugs lurking with code using scalar values because you are handing control over to numpy:",the dataframe.compound and series.compound methods are deprecated and will be removed in a future version .,"previously, pandas would register converters with matplotlib as a side effect of importing pandas . this changed the output of plots made via matplotlib plots after pandas was imported, even if you were using matplotlib directly rather than plot.",removal of deprecated float indexers,"dataframe.unstack and series.unstack now take fill_value keyword to allow direct replacement of missing values when an unstack results in missing values in the resulting dataframe. as an added benefit, specifying fill_value will preserve the data type of the original stacked data. ",series.reshape and categorical.reshape have been deprecated and will be removed in a subsequent release ,"removed index.contains, use key in index instead ","series.str.cat has deprecated using arbitrary list-likes within list-likes. a list-like container may still contain many series, index or 1-dimensional np.ndarray, or alternatively, only scalar values. ",excelfile.parse has deprecated sheetname in favor of sheet_name for consistency with read_excel .,the method name index.sym_diff is deprecated and can be replaced by index.symmetric_difference ,"add the keyword dropna=true to append to change whether all nan rows are not written to the store , also settable via the option io.hdf.dropna_table ","dateoffset.isanchored and datetoffset.onoffset are deprecated and will be removed in a future version, use dateoffset.is_anchored and dateoffset.is_on_offset instead ","some formerly public python/c/c++/cython extension modules have been moved and/or renamed. these are all removed from the public api. furthermore, the pandas.core, pandas.compat, and pandas.util top-level modules are now considered to be private. if indicated, a deprecation warning will be issued if you reference these modules. ",pd.timegrouper is deprecated in favor of pandas.grouper ,removed the previously deprecated sheetname keyword in read_excel ,# but setting names is not deprecated,"cdate_range has been deprecated in favor of bdate_range, which has gained weekmask and holidays parameters for building custom frequency date ranges. see the documentation for more details ","as a result of a change in yahoo s option page layout, when an expiry date is given, options methods now return data for a single expiry date. previously, methods returned all data for the selected month.",deprecated parameter dtype of method copy for all index subclasses. use the astype method instead for changing dtype ,the center keyword in the dataframe.expanding function is deprecated and will be removed in a future version ,index.repeat and multiindex.repeat have deprecated the n parameter in favor of repeats ,"categorical.to_dense is deprecated and will be removed in a future version, use np.asarray instead ",series.nsmallest and nlargest s take_last keyword was deprecated in favor of keep. ,read_excel has deprecated sheetname in favor of sheet_name for consistency with .to_excel .,removed the previously deprecated keywords verbose and private_key from read_gbq ,"the public functions in pandas.tools.hashing deprecated from that locations, but are now importable from pandas.util ","indexing an index object with a float key is deprecated, and will raise an indexerror in the future. you can manually convert to an integer key instead .",the pandas.io.ga module which implements google-analytics support is deprecated and will be removed in a future version ,"removed index.dtype_str, use str instead ",removed the previously deprecated dataframe.reindex_axis and series.reindex_axis ,the attributes categorical labels and levels attributes are deprecated and renamed to codes and categories.,"deprecated indexing dataframe rows with a single datetime-like string as df , use df.loc instead ",check the api changes and deprecations before updating.,the rplot trellis plotting interface is deprecated and will be removed in a future version. we refer to external packages like seaborn for similar but more refined functionality . the documentation includes some examples how to convert your existing code from rplot to seaborn here.,new datetimeindex class supports both fixed frequency and irregular time series. replaces now deprecated daterange class,there are prior version deprecations that are taking effect as of 0.14.0.,"indexing with a list of labels, where one or more of the labels is missing, is deprecated and will raise a keyerror in a future version, see here.", futurewarning: pd.rolling_cov is deprecated for series and,removed the previously deprecated behavior of altering column or index labels with series.rename_axis or dataframe.rename_axis ,"removed the previously deprecated keyword fill_value from categorical.fillna, use value instead ",futurewarning: select is deprecated and will be removed in a future release. you can use .loc as a replacement,"removal of the legacy time rules , deprecated since 0.17.0 . now legacy time rules raises valueerror. for the list of currently supported offsets, see here.",removed the previously deprecated keyword dtype from block.make_block_same_class ,remove deprecated _verbose_info ,periodindex.to_datetime has been deprecated in favor of periodindex.to_timestamp ,removed the previously deprecated keyword order from factorize ,series.repeat has deprecated the reps parameter in favor of repeats ,removed the previously deprecated assert_raises_regex function in pandas._testing ,the broadcast parameter of .apply is deprecated in favor of result_type='broadcast' ,"the index set operations + and - were deprecated in order to provide these for numeric type operations on certain index types. + can be replaced by .union or |, and - by .difference. further the method name index.diff is deprecated and can be replaced by index.difference ","the default for pd.to_datetime error handling has changed to errors='raise'. in prior versions it was errors='ignore'. furthermore, the coerce argument has been deprecated in favor of errors='coerce'. this means that invalid parsing will raise rather that return the original input as in previous versions. ","the shift method now accepts fill_value as an argument, allowing the user to specify a value which will be used instead of na/nat in the empty periods. ",removal of the previously deprecated module pandas.json ," will be removed in a future version, replace with",read_excel will correctly show the deprecation warning for previously deprecated sheetname ,"removed the previously deprecated keyword raise_conflict from dataframe.update, use errors instead ",deprecated index.is_all_dates ,removed the previously deprecated true option for the dropna keyword argument in seriesgroupby.nth ,the squeeze keyword in groupby is deprecated and will be removed in a future version ,the parameter is_copy of series.take and dataframe.take has been deprecated and will be removed in a future version. ,"deprecate use of strings denoting units with m , y or y in to_timedelta ",changed caching in abstractholidaycalendar to be at the instance level rather than at the class level as the latter can result in unexpected behaviour. ,panel4d and panelnd constructors are deprecated and will be removed in a future version. the recommended way to represent these types of n-dimensional data are with the xarray package. pandas provides a to_xarray method to automate this conversion .,"you will get a deprecation warning in the 0.10.x series, and the deprecated functionality will be removed in 0.11 or later.","we ve added a new option to control the converters: pd.options.plotting.matplotlib.register_converters. by default, they are registered. toggling this to false removes pandas formatters and restore any converters we overwrote when registering them .",buffer_lines has been deprecated and will be removed in a future version ,dataframe.astype has deprecated the raise_on_error parameter in favor of errors ,diff will raise a typeerror rather than implicitly losing the dtype of extension types in the future. convert to the correct dtype before calling diff instead ,"calling a binary-input numpy ufunc on multiple dataframe objects now aligns, matching the behavior of binary operations and ufuncs on series . this change has been reverted in pandas 1.2.1, and the behaviour to not align dataframes is deprecated instead, see the the 1.2.1 release notes.",updated bigquery connector to no longer use deprecated oauth2client.tools.run ,"chained assignment will now by default warn if the user is assigning to a copy. this can be changed with the option mode.chained_assignment, allowed options are raise/warn/none. see the docs.",removed the previously deprecated raise_on_error keyword argument in dataframe.where and dataframe.mask ,"in 0.15.0 index has internally been refactored to no longer sub-class ndarray but instead subclass pandasobject, similarly to the rest of the pandas objects. this change allows very easy sub-classing and creation of new index types. this should be a transparent change with only very limited api implications ","removed index.get_duplicates, use idx.unique instead ","deprecated the unique method, can be replicated by select_column.unique",removed the previously deprecated convert keyword argument in series.take and dataframe.take ,compat with scipy > 0.17 for deprecated piecewise_polynomial interpolation method; support for the replacement from_derivatives method ,series.sortlevel and dataframe.sortlevel have been deprecated in favor of series.sort_index and dataframe.sort_index ,deprecated,"dataframe.tshift and series.tshift are deprecated and will be removed in a future version, use dataframe.shift and series.shift instead ","creating a timedeltaindex, datetimeindex, or periodindex by passing range arguments start, end, and periods is deprecated in favor of timedelta_range, date_range, or period_range ",removed the previously deprecated dataframe.from.csv and series.from_csv ,"in 0.13.0 series has internally been refactored to no longer sub-class ndarray but instead subclass ndframe, similar to the rest of the pandas containers. this should be a transparent change with only very limited api implications. see internal refactoring","removed deprecated behavior of series.argmin and series.argmax, use series.idxmin and series.idxmax for the old behavior ",index.summary is deprecated and will be removed in a future version ,deprecate groupby.agg with a dictionary when renaming,the following top-level pandas functions have been deprecated and will be removed in a future version ,pandas.parser.overflowerror exception has been removed and has been replaced with python s built-in overflowerror exception ,"timeseries deprecated in favor of series , ","dataframe and panel constructors with invalid input will now raise valueerror rather than pandas.core.common.pandaserror, if called with scalar inputs and not axes; the exception pandaserror is removed as well. ","in order to improve tab-completion, pandas does not include most deprecated attributes when introspecting a pandas object using dir ). to see which attributes are excluded, see an object s _deprecations attribute, for example pd.dataframe._deprecations .","the series.ftype, series.ftypes and dataframe.ftypes methods are deprecated and will be removed in a future version. instead, use series.dtype and dataframe.dtypes .",removed the previously deprecated convert_objects ,"some of the existing functions or function aliases have been deprecated and will be removed in future versions. this includes: tquery, uquery, read_frame, frame_query, write_frame.","removed the previously deprecated keyword n from datetimeindex.shift, timedeltaindex.shift, periodindex.shift, use periods instead ",support for negative integer for pd.options.display.max_colwidth is deprecated in favor of using none ,"however, .agg can also accept a dict that allows renaming of the result columns. this is a complicated and confusing syntax, as well as not consistent between series and dataframe. we are deprecating this renaming functionality.","removed the previously deprecated keyword labels from multiindex.set_codes, multiindex.copy, multiindex.drop, use codes instead ",categorical.from_array has been deprecated and will be removed in a future version ,removed the previously deprecated ordered and categories keyword arguments in astype ,"dataframe.to_csv now uses os.linesep rather than '\n' for the default line terminator . this change only affects when running on windows, where '\r\n' was used for line terminator even when '\n' was passed in line_terminator.",two arguments are now deprecated ):,fix to ensure that tab-completion in an ipython console does not raise warnings for deprecated attributes .,categorical.from_codes has deprecated providing float values for the codes argument. ,"sparsearray.to_dense has deprecated the fill parameter, as that parameter was not being respected ","deprecate the engine keyword in .to_csv, which will be removed in a future version ",the inplace parameter of categorical.remove_unused_categories is deprecated and will be removed in a future version ,"removed the previously deprecated keyword errors in timestamp.tz_localize, datetimeindex.tz_localize, and series.tz_localize ","note: set_printoptions/ reset_printoptions are now deprecated , the print options now live under display.xyz . for example:",removed the previously deprecated keyword fastpath from pandas.core.internals.blocks.make_block ,"removed the previously deprecated keyword time_rule from offsets.generate_range, which has been moved to core.arrays._ranges.generate_range ","using a scalar float indexer will be deprecated in a future version, but is allowed for now.","we have also deprecated and changed similar methods in two series-like classes, index and categorical.",this type of aggregation is the recommended alternative to the deprecated behavior when passing a dict to a series groupby aggregation with a dictionary when renaming).,"the functions pd.rolling_*, pd.expanding_*, and pd.ewm* are deprecated and replaced by the corresponding method call. note that the new suggested syntax includes all of the arguments ",deprecations will be introduced in minor releases ,"pandas.stats.ols, pandas.stats.plm and pandas.stats.var routines are deprecated and will be removed in a future version ",the reduce parameter of .apply is deprecated in favor of result_type='reduce' ,"the deprecated irow, icol, iget and iget_value methods are removed in favor of iloc and iat as explained here .",apply_index is deprecated and will be removed in a future version. use offset + other instead ,dataframe.from_csv and series.from_csv have been deprecated in favor of read_csv ,"series.rolling.apply, dataframe.rolling.apply, series.expanding.apply, and dataframe.expanding.apply have deprecated passing an np.array by default. one will need to pass the new raw parameter to be explicit about what is passed ",the order parameter of factorize is deprecated and will be removed in a future release ,pandas.read_excel has deprecated accepting usecols as an integer. please pass in a list of ints from 0 to usecols inclusive instead ,"remove use of some deprecated numpy comparison operations, mainly in tests. ",the type import pandas.tslib.nattype is deprecated and can be replaced by using type ,the as_indexer keyword of series.str.match has been deprecated .,the deprecated longpanel class has been completely removed,adding datetimeindex/periodindex to another datetimeindex/periodindex is being deprecated as a set-operation. this will be changed to a typeerror in a future version. .union should be used for the union set operation. ,"bug in groupby where callable objects without name attributes would take the wrong path, and produce a dataframe instead of a series ",removed the previously deprecated behavior of series treated as list-like in rename_categories ,bug in timestamp.replace when replacing tzinfo around dst changes ,intervalindex.from_intervals is deprecated in favor of the intervalindex constructor ,pandas.tseries.frequencies.to_offset s freqstr keyword is deprecated in favor of freq ,"we haven t removed or deprecated series.values or dataframe.values, but we highly recommend and using .array or .to_numpy instead.",the outtype argument to pd.dataframe.to_dict has been deprecated in favor of orient. ,"we are deprecating passing a dict to a grouped/rolled/resampled series. this allowed one to rename the resulting aggregation, but this had a completely different meaning than passing a dictionary to a grouped dataframe, which accepts column-to-aggregations.",is deprecated and will be removed in a future version,frozenndarray.searchsorted has deprecated the v parameter in favor of value ,"shift will now always return a copy, instead of the previous behaviour of returning self when shifting by 0 ",as_recarray has been deprecated and will be removed in a future version ,the method name categorical.sort is deprecated in favor of categorical.sort_values ,"show a futurewarning rather than a deprecationwarning on using long-time deprecated syntax in hdfstore.select, where the where clause is not a string-like ","deprecated slice-indexing on tz-aware datetimeindex with naive datetime objects, to match scalar indexing behavior ",indexing a series with a multi-dimensional indexer like to return an ndarray now raises a futurewarning. convert to a numpy array before indexing instead ,"for method multiindex.copy, the labels parameter has been deprecated and replaced by a codes parameter.","index.is_mixed is deprecated and will be removed in a future version, check index.inferred_type directly instead ",the top-level pd.value_range has been deprecated and can be replaced by .describe ,the generate_bq_schema function is now deprecated and will be removed in a future version ,a new public pandas.plotting module has been added that holds plotting functionality that was previously in either pandas.tools.plotting or in the top-level namespace. see the deprecations sections for more details.,we ve deprecated the current behavior of series.argmax and series.argmin. using either of these will emit a futurewarning. use series.idxmax if you want the label of the maximum. use series.values.argmax if you want the position of the maximum. likewise for the minimum. in a future release series.argmax and series.argmin will return the position of the maximum or minimum.,remove deprecated read_clipboard/to_clipboard/excelfile/excelwriter from pandas.io.parsers these are available as functions in the main pandas namespace ,"we re working with the matplotlib developers to make this easier. we re trying to balance user convenience with import performance and best practices . in the future we hope to have most of the datetime formatting functionality in matplotlib, with just the pandas-specific converters in pandas. we ll then gracefully deprecate the automatic registration of converters in favor of users explicitly registering them when they want them.","multiindex.labels has been deprecated and replaced by multiindex.codes. the functionality is unchanged. the new name better reflects the natures of these codes and makes the multiindex api more similar to the api for categoricalindex . as a consequence, other uses of the name labels in multiindex have also been deprecated and replaced with codes:",datetimeindex.shift and periodindex.shift now accept periods argument instead of n for consistency with index.shift and series.shift. using n throws a deprecation warning ,the convert_datetime64 parameter in dataframe.to_records has been deprecated and will be removed in a future version. the numpy bug motivating this parameter has been resolved. the default value for this parameter has also changed from true to none .,"lookups on a series with a single-item list containing a slice ]]) are deprecated and will raise in a future version. either convert the list to a tuple, or pass the slice directly instead ","deprecated index.asi8 for index subclasses other than datetimeindex, timedeltaindex, and periodindex ",previous api will work but with deprecations,removed the previously deprecated keyword fastpath from the index constructor ,deprecated parameters levels and codes in multiindex.copy. use the set_levels and set_codes methods instead ,the deprecated attributes _axis_names and _axis_numbers of dataframe and series will no longer show up in dir or inspect.getmembers calls ,"furthermore, previously you could change the ordered attribute of a categorical by just setting the attribute, e.g. cat.ordered=true; this is now deprecated and you should use cat.as_ordered or cat.as_unordered. these will by default return a new object and not modify the existing object. ","deprecated the string method match, whose role is now performed more idiomatically by extract. in a future release, the default behavior of match will change to become analogous to contains, which returns a boolean indexer. in this release, the deprecated behavior is the default, but the new behavior is available through the keyword argument as_indexer=true.",removed the previously deprecated cdate_range ,"the convert parameter has been deprecated in the .take method, as it was not being respected ",removed the previously deprecated keyword convert_datetime64 from dataframe.to_records ,bug in dataframe.replace where changing a dtype through replacement would only replace the first occurrence of a value ,"timedeltaindex.searchsorted, datetimeindex.searchsorted, and periodindex.searchsorted have deprecated the key parameter in favor of value ",".values is changed to return an array of period objects, rather than an array of integers .","pd.timeseries was deprecated officially in 0.17.0, though has already been an alias since 0.13.0. it has been dropped in favor of pd.series. .",the parallel_coordinates and andrews_curves functions now take positional argument frame instead of data. a futurewarning is raised if the old data argument is used by name. ,"the data, base, strides, flags and itemsize properties of the series and index classes have been deprecated and will be removed in a future version .",deprecated parameter inplace in multiindex.set_codes and multiindex.set_levels ,the null_counts parameter of dataframe.info is deprecated and replaced by show_counts. it will be removed in a future version ,dataframe.to_csv has deprecated the tupleize_cols argument. multiindex columns will be always written as rows in the csv file ,removed the previously deprecated keyword verify_integrity from the datetimeindex and timedeltaindex constructors ,the msgpack format is deprecated as of 0.25 and will be removed in a future version. it is recommended to use pyarrow for on-the-wire transmission of pandas objects. ,for series the following indexing functions are deprecated .,check the api changes and deprecations before updating,".get_value and .set_value on series, dataframe, panel, sparseseries, and sparsedataframe are deprecated in favor of using .iat or .at accessors ","pandas.core.index has been deprecated and will be removed in a future version, the public classes are available in the top-level namespace ","the existing methods series.sort, series.order, and dataframe.sort have been deprecated and will be removed in a future version.",the is_copy attribute is deprecated and will be removed in a future version .,subtracting datetimeindex/periodindex from another datetimeindex/periodindex is being deprecated as a set-operation. this will be changed to an actual numeric subtraction yielding a timedeltaindex in a future version. .difference should be used for the differencing set operation. ,removed the previously deprecated keyword join_axes from concat; use reindex_like on the result instead ,series.nonzero is deprecated and will be removed in a future version ,using dataframe.rename_axis and series.rename_axis to alter index or column labels is now deprecated in favor of using .rename. rename_axis may still be used to alter the name of the index or columns .,the tz keyword in period.to_timestamp is deprecated and will be removed in a future version; use per.to_timestamp.tz_localize instead ,"the pandas 1.0 release removed a lot of functionality that was deprecated in previous releases . it is recommended to first upgrade to pandas 0.25 and to ensure your code is working without warnings, before upgrading to pandas 1.0.",read_excel has deprecated parse_cols in favor of usecols for consistency with read_csv ,remove deprecated set_printoptions/reset_printoptions ,"removal of support for positional indexing with floats, which was deprecated since 0.14.0. this will now raise a typeerror, see here.", futurewarning: pd.rolling_mean is deprecated for series and,# note that this is deprecated as of 0.14.0,"the dataframe.infer_objects and series.infer_objects methods have been added to perform dtype inference on object columns, replacing some of the functionality of the deprecated convert_objects method. see the documentation here for more details. ",the numpy argument of pandas.read_json is deprecated .,"the behavior of series.argmax and series.argmin have been deprecated in favor of series.idxmax and series.idxmin, respectively .",index.get_value is deprecated and will be removed in a future version ,importing concat from pandas.tools.merge has been deprecated in favor of imports from the pandas namespace. this should only affect explicit imports ,"series.clip_lower, series.clip_upper, dataframe.clip_lower and dataframe.clip_upper are deprecated and will be removed in a future version. use series.clip, series.clip and the equivalent dataframe methods ",removed the previously deprecated parse_cols keyword in read_excel ,the dataframe.drop_duplicates and dataframe.duplicated methods now take argument subset instead of cols to better align with dataframe.dropna. a futurewarning is raised to alert that the old cols arguments will not be supported in a future release ,partial slicing on unordered datetimeindex objects with keys that are not in the index is deprecated and will be removed in a future version ,multiindex.set_labels has been deprecated in favor of multiindex.set_codes.,index.get_duplicates is deprecated and will be removed in a future version ,setting values with .loc using a positional slice is deprecated and will raise in a future version. use .loc with labels or .iloc with positions instead ,categorical.from_codes now can take a dtype parameter as an alternative to passing categories and ordered .,"removed the previously deprecated keywords how , fill_method , and limit from dataframe.resample ",an undesired api breakage with functions taking the inplace option has been reverted and deprecation warnings added.,integer addition/subtraction with datetimes and timedeltas is deprecated,the pandas.io.data package is deprecated and will be replaced by the pandas-datareader package. this will allow the data modules to be independently updated to your pandas installation. the api for pandas-datareader v0.1.1 is exactly the same as in pandas v0.17.0 .,removed the previously deprecated timegrouper ,"timestamp.weekday_name, datetimeindex.weekday_name, and series.dt.weekday_name are deprecated in favor of timestamp.day_name, datetimeindex.day_name, and series.dt.day_name ","dataframe.to_sql has deprecated the flavor parameter, as it is superfluous when sqlalchemy is not installed ",multiindex.to_hierarchical is deprecated and will be removed in a future version ,futurewarning: using a dict with renaming is deprecated and,"dateoffset.__call__ is deprecated and will be removed in a future version, use offset + other instead ",improved the warnings for the deprecated methods series.real and series.imag ,the parameter numeric_only of categorical.min and categorical.max is deprecated and replaced with skipna ,"date parser functions parse_date_time, parse_date_fields, parse_all_fields and generic_parser from pandas.io.date_converters are deprecated and will be removed in a future version; use to_datetime instead ",deprecation of panel4d and panelnd. we recommend to represent these types of n-dimensional data with the xarray package.,"removed the previously deprecated keyword by from dataframe.sort_index, use dataframe.sort_values instead ",pandas.stats.fama_macbeth routines are deprecated and will be removed in a future version ,"timestamp.offset property , has been deprecated in favor of freq ","in 0.15.0 index has internally been refactored to no longer sub-class ndarray but instead subclass pandasobject, similarly to the rest of the pandas objects. this change allows very easy sub-classing and creation of new index types. this should be a transparent change with only very limited api implications :","for the c parsing engine, the methods read_csv and read_table previously defaulted to a parser that could read floating point numbers slightly incorrectly with respect to the last bit in precision. the option floating_precision=""high"" has always been available to avoid this issue. beginning with this version, the default is now to use the more accurate parser by making floating_precision=none correspond to the high precision parser, and the new option floating_precision=""legacy"" to use the legacy parser. the change to using the higher precision parser by default should have no impact on performance. ",removed the previously deprecated keyword skip_footer from read_excel; use skipfooter instead ,removed the previously deprecated pd.options.html.border ,"the how keyword in periodindex.astype is deprecated and will be removed in a future version, use index.to_timestamp instead ",the convert_dummies method has been deprecated in favor of get_dummies ,for dataframe the following indexing functions are deprecated .,datetimeindex.to_perioddelta is deprecated and will be removed in a future version. use index - index.to_period.to_timestamp instead ,"addition and subtraction of the base index type and of datetimeindex previously performed set operations . this behavior was already deprecated since 0.15.0 and .difference methods), and is now disabled. when possible, + and - are now used for element-wise operations, for example for concatenating strings or subtracting datetimes .",dataframe.to_dict has deprecated accepting short names for orient and will raise in a future version ,"removed the previously deprecated keyword labels from the multiindex constructor, use codes instead ",removed the previously deprecated frozenndarray class in pandas.core.indexes.frozen ,"fixed regression where setting pd.options.display.max_colwidth was not accepting negative integer. in addition, this behavior has been deprecated in favor of using none ","the default value for the return_type parameter for dataframe.plot.box and dataframe.boxplot changed from none to ""axes"". these methods will now return a matplotlib axes by default instead of a dictionary of artists. see here .","deprecated the units=m and units=y parameters for units of pandas.to_timedelta, pandas.timedelta and pandas.timedeltaindex ",the method and axis arguments of dataframe.replace are deprecated,pandas.json_normalize is now exposed in the top-level namespace. usage of json_normalize as pandas.io.json.json_normalize is now deprecated and it is recommended to use json_normalize as pandas.json_normalize instead .,the pandas.rpy interface is deprecated and will be removed in a future version. similar functionality can be accessed through the rpy2 project ,"dataframe.convert_objects has been deprecated in favor of type-specific functions pd.to_datetime, pd.to_timestamp and pd.to_numeric .",the by argument of dataframe.sort_index has been deprecated and will be removed in a future version.,"added top-level function read_excel to replace the following, the original api is deprecated and will be removed in a future version",the fastpath keyword in the singleblockmanager constructor is deprecated and will be removed in a future version ,the pivot_table/dataframe.pivot_table and crosstab functions now take arguments index and columns instead of rows and cols. a futurewarning is raised to alert that the old rows and cols arguments will not be supported in a future release ,the series constructor and .astype method have deprecated accepting timestamp dtypes without a frequency for the dtype parameter ,"removed the previously deprecated tupleize_cols keyword argument in read_html, read_csv, and dataframe.to_csv ",the pandas.sandbox.qtpandas interface is deprecated and will be removed in a future version. we refer users to the external package pandas-qt. ,deprecated in 0.13.0,removed the previously deprecated select method of dataframe and series ,passing a non-existent column in .to_excel is deprecated and will raise a keyerror in the future ,pd.tseries.util.isleapyear has been deprecated and will be removed in a subsequent release. datetime-likes now have a .is_leap_year property ,named aggregation is the recommended replacement for the deprecated dict-of-dicts approach to naming the output of column-specific aggregations with a dictionary when renaming).,the methods dataframe.update and panel.update have deprecated the raise_conflict=false|true keyword in favor of errors='ignore'|'raise' ,the pandas.options.display.mpl_style configuration has been deprecated and will be removed in a future version of pandas. this functionality is better handled by matplotlib s style sheets .,"removed the previously deprecated keyword data from andrews_curves, use frame instead ",categorical.searchsorted and series.searchsorted have deprecated the v parameter in favor of value ,"the options html.border and mode.use_inf_as_null were deprecated in prior versions, these will now show futurewarning rather than a deprecationwarning ","removed neg - boolean operations on numpy arrays in favor of inv ~, as this is going to be deprecated in numpy 1.9 ","removed the previously deprecated keyword pat from series.str.partition and series.str.rpartition, use sep instead ",sparselist has been deprecated and will be removed in a future version ,the fastpath keyword of the different index constructors is deprecated .,"the outer method on numpy ufuncs, e.g. np.subtract.outer has been deprecated on series objects. convert the input to an array with series.array first ","previously, selecting with a list of labels, where one or more labels were missing would always succeed, returning nan for missing labels. this will now show a futurewarning. in the future this will raise a keyerror . this warning will trigger on a dataframe or a series for using .loc or ] when passing a list-of-labels with at least 1 missing label. see the deprecation docs.","pandas.tseries.frequencies.get_offset is deprecated and will be removed in a future version, use pandas.tseries.frequencies.to_offset instead ",indexing with a list with missing labels is deprecated,the default value ordered=none in categoricaldtype has been deprecated in favor of ordered=false. when converting between categorical types ordered=true must be explicitly passed in order to be preserved. ,the series.select and dataframe.select methods are deprecated in favor of using df.loc ,pandas.api.types.is_period is deprecated in favor of pandas.api.types.is_period_dtype ,"the default behaviour of series.str.match has changed from extracting groups to matching the pattern. the extracting behaviour was deprecated since pandas version 0.13.0 and can be done with the series.str.extract method . as a consequence, the as_indexer keyword is ignored and is deprecated.","pandas.concat has deprecated the join_axes-keyword. instead, use dataframe.reindex or dataframe.reindex_like on the result or on the inputs ",removed the previously deprecated keywords reduce and broadcast from dataframe.apply ,"datetimearray.week and datetimearray.weekofyear are deprecated and will be removed in a future version, use datetimearray.isocalendar.week instead ",read_csv has deprecated the tupleize_cols argument. column tuples will always be converted to a multiindex ,"panel was deprecated in the 0.20.x release, showing as a deprecationwarning. using panel will now show a futurewarning. the recommended way to represent 3-d data are with a multiindex on a dataframe via the to_frame or with the xarray package. pandas provides a to_xarray method to automate this conversion .",index.to_datetime and datetimeindex.to_datetime have been deprecated in favor of pd.to_datetime ,sparsepanel deprecated and will be removed in a future version .,removed the previously deprecated keyword encoding from read_stata and dataframe.to_stata ,pd.tseries.util.pivot_annual has been removed . use pivot_table instead ,removal of the previously deprecated module pandas.core.datetools ,"this new api for resample includes some internal changes for the prior-to-0.18.0 api, to work with a deprecation warning in most cases, as the resample operation returns a deferred object. we can intercept operations and just do what the api did . here is a typical use case:","bug in putting a periodindex into a series would convert to int64 dtype, rather than object of periods ",deprecated the nthreads keyword of pandas.read_feather in favor of use_threads to reflect the changes in pyarrow>=0.11.0. ,"dataframe.lookup is deprecated and will be removed in a future version, use dataframe.melt and dataframe.loc instead ","removed pandas.plotting._matplotlib.tsplot, use series.plot instead ",the deprecated dataframe.iterkv has been removed in favor of dataframe.iteritems ,"datetimeindex.week and datetimeindex.weekofyear are deprecated and will be removed in a future version, use datetimeindex.isocalendar.week instead ","removed the previously deprecated keyword data from parallel_coordinates, use frame instead ",compact_ints and use_unsigned have been deprecated and will be removed in a future version ,the methods series.str.partition and series.str.rpartition have deprecated the pat keyword in favor of sep ,skip_footer has been deprecated in favor of skipfooter and will be removed in a future version ,ndframe.get_ftype_counts is deprecated and will be removed in a future version ,"dataframe.to_stata, read_stata, statareader and statawriter have deprecated the encoding argument. the encoding of a stata dta file is determined by the file type and cannot be changed ","removed the previously deprecated keyword colors from parallel_coordinates, use color instead ","the deprecated internal attributes _start, _stop and _step of rangeindex now raise a futurewarning instead of a deprecationwarning "," futurewarning: pd.rolling_mean is deprecated for dataframe and will be removed in a future version, replace with",the parameter label in lreshape has been deprecated and will be removed in a future version ,seriesgroupby.nth has deprecated true in favor of 'all' for its kwarg dropna .,pd.options.html.border has been deprecated in favor of pd.options.display.html.border .,pd.ordered_merge has been removed . use pd.merge_ordered instead ,# deprecated now,pandas.api.types.is_categorical is deprecated and will be removed in a future version; use pandas.api.types.is_categorical_dtype instead ,"timestamp.tz_localize, datetimeindex.tz_localize, and series.tz_localize have deprecated the errors argument in favor of the nonexistent argument ",pandas.api.types.is_datetimetz is deprecated in favor of pandas.api.types.is_datetime64tz ,"timedelta.resolution is deprecated and replaced with timedelta.resolution_string. in a future version, timedelta.resolution will be changed to behave like the standard library datetime.timedelta.resolution ","previously, when using certain iteration methods for a series with dtype int or float, you would receive a numpy scalar, e.g. a np.int64, rather than a python int. issue corrected this for series.tolist and list. this change makes all iteration methods consistent, in particular, for __iter__ and .map; note that this only affects int/float dtypes. .","removal of the automatic timeseries broadcasting, deprecated since 0.8.0, see here","support for multi-dimensional indexing on a index is deprecated and will be removed in a future version, convert to a numpy array before indexing instead ",drop_duplicates and duplicated s take_last keyword was deprecated in favor of keep. ,added back pandas.core.common.array_equivalent with a deprecation warning .,"removed the previously deprecated keyword nthreads from read_feather, use use_threads instead ",passing multiple axes to the axis parameter in dataframe.dropna has been deprecated and will be removed in a future version ,"is_any_int_dtype, is_floating_dtype, and is_sequence are deprecated from pandas.api.types ","in gh4892 indexing with floating point numbers on a non-float64index was deprecated . in 0.18.0, this deprecation warning is removed and these will now raise a typeerror. ",timestamp.to_datetime has been deprecated in favor of timestamp.to_pydatetime ,pandas.core.datetools module has been deprecated and will be removed in a subsequent release ,the infer_types argument to read_html now has no effect and is deprecated .,removed the previously deprecated behavior of arithmetic operations with datetime.date objects 
fire Â· PyPI
ccxt Â· PyPI
Changelog â€” beets 1.4.9 documentation,"when previewing changes during import, differences in track duration are now shown as 2:50 vs. 3:10 rather than separated with -> like track numbers. this should clarify that beets isn t doing anything to modify lengths.",the default replace sanitation options now remove leading whitespace by default. thanks to brilnius.,"the directory hierarchy can now be customized based on release type. in particular, the path_format setting in .beetsconfig has been replaced with a new section, which allows you to specify different path formats for normal and compilation releases as well as for each album type . the default path formats have been changed to use $albumartist instead of $artist.",the pluginpath config option can now point to the directory containing plugin code. this change should also work around a long-standing issue when using pluginpath when beets is installed using pip. many thanks to geigerzaehler.,renamed config options: many plugins have a flag dictating whether their action runs at import time. this option had many names but is now consistently called auto.,"fuzzy search plugin: the fuzzy command was removed and replaced with a new query type. to perform fuzzy searches, use the ~ prefix with list or other commands. thanks to philippe mongeau.",fix several uses of deprecated standard-library features on python 3.7. thanks to arcresu. #3197,ftintitle plugin: a new option lets you remove featured artists entirely instead of moving them to the title. thanks to sutjael.,"the highlight of this release is album merging, an oft-requested option in the importer to add new tracks to an existing album you already have in your library. this way, you no longer need to resort to removing the partial album from your library, combining the files manually, and importing again.",convert plugin: a new --keep-new option lets you store transcoded files in your library while backing up the originals . thanks to lucas duailibe.,convert plugin: the plugin now has an id3v23 option that allows you to override the global id3v23 option. thanks to holzhaus. #3104,"convert plugin: also, a new auto config option will transcode audio files automatically during import. thanks again to lucas duailibe.",the old top-level colors configuration option has been removed .,"track length is now displayed as m:ss rather than a raw number of seconds. queries on track length also accept this format: for example, beet list length:5:30.. will find all your tracks that have a duration over 5 minutes and 30 seconds. you can turn off this new behavior using the format_raw_length configuration option. #1749",the replace configuration option can now remove characters entirely if the special string <strip> is specified as the replacement.,a new from_scratch configuration option makes the importer remove old metadata before applying new metadata. this new feature complements the zero and scrub plugins but is slightly different: beets clears out all the old tags it knows about and only keeps the new data it gets from the remote metadata source. thanks to tummychow. #934 #2755,"better support for singleton tracks. whereas beets previously only really supported full albums, now it can also keep track of individual, off-album songs. the singleton path format can be used to customize where these tracks are stored. to import singleton tracks, provide the -s switch to the import command or, while doing a normal full-album import, choose the as tracks option to add singletons to your library. to list only singleton or only album tracks, use the new singleton: query term: the query singleton:true matches only singleton tracks; singleton:false matches only album tracks. the lastid plugin has been extended to support matching individual items as well.",a new --force option for the remove command allows removal of items without prompting beforehand. #2042,"smart playlist plugin: playlist updating should now be faster: the plugin detects, for each playlist, whether it needs to be regenerated, instead of obliviously regenerating all of them. the splupdate command can now also take additional parameters that indicate the names of the playlists to regenerate.","convert plugin: you can now transcode files to any audio format, rather than just mp3. thanks again to rowan lewis.","the default filename character substitutions were changed to be more conservative. the windows reserved characters are substituted by default even on unix platforms . to customize your character substitutions, see the replace config option.",the deprecated list_format_album and list_format_item configuration options have been removed .,"convert plugin: a new copy_album_art option puts images alongside converted files. thanks to ngel alonso. #1050, #1055","relatedly, the -l flag to the import command makes it take a query as its argument instead of a list of directories. the matched albums are then re-imported.","scrub plugin: scrubbing now removes all types of tags from a file rather than just one. for example, if your flac file has both ordinary flac tags and id3 tags, the id3 tags are now also removed.","removed the lastid plugin, which was deprecated in the previous version.",convert plugin: the default configuration uses ffmpeg s built-in aac codec instead of faac. thanks to jansol. #2484
CHANGELOG - AllenNLP v2.4.0,"allennlp.common.util.peak_memory_mb renamed to peak_cpu_memory, and allennlp.common.util.gpu_memory_mb renamed to peak_gpu_memory, and they both now return the results in bytes as integers. also, the peak_gpu_memory function now utilizes pytorch functions to find the memory usage instead of shelling out to the nvidia-smi command. this is more efficient and also more accurate because it only takes into account the tensor allocations of the current pytorch process.","added a filelock class to common.file_utils. this is just like the filelock from the filelock library, except that it adds an optional flag read_only_ok: bool, which when set to true changes the behavior so that a warning will be emitted instead of an exception when lacking write permissions on an existing file lock. this makes it possible to use the filelock class on a read-only file system.",remove temporary directory when extracting model archive in load_archive at end of function rather than via atexit.,"coding_scheme parameter is now deprecated in conll2003datasetreader, please use convert_to_coding_scheme instead.","histogram_interval parameter is now deprecated in tensorboardwriter, please use distribution_interval instead.",model.get_parameters_for_histogram_tensorboard_logging is deprecated in favor of model.get_parameters_for_histogram_logging.
Theano Release Notes :: NVIDIA Deep Learning Frameworks Documentation
Releases | Apache Arrow,arrow-2769 - deprecate and rename add_metadata methods,arrow-1402 - possibly deprecate public apis that use mutablebuffer,arrow-3231 - sphinx s autodoc_default_flags is now deprecated,arrow-2003 - do not use deprecated kwarg in pandas.core.internals.make_block,arrow-10284 - pyarrow is raising deprecation warning about filesystems on import,"arrow-1408 - refactor and make ipc read / write apis more consistent, add appropriate deprecations",parquet-1846 - remove deprecated io classes and related functions,arrow-12396 - clarify serialization docstrings about deprecated status,"arrow-4098 - deprecate pyarrow.open_stream,open_file in favor of pa.ipc.open_stream/open_file",arrow-10283 - python deprecation warning for py_ssize_t_clean will be required for # formats ,arrow-1539 - remove functions deprecated as of 0.7.0 and prior releases,arrow-2180 - remove apis deprecated in 0.8.0 release,arrow-10261 - lists should take field instead of datatype,arrow-1395 - remove apis deprecated as of 0.5.0 and later versions,arrow-10285 - pyarrow.orc submodule is using deprecated functionality,arrow-6125 - remove any apis deprecated prior to 0.14.x,"arrow-7495 - remove empty concept from arrowbuf, replace with custom referencemanager",arrow-8326 - don t use deprecated typed_test_case,arrow-2612 - fix deprecated plasma_default_release_delay,arrow-6350 - remove arrow::struct and use hash instead,"arrow-3190 - writeablefile is misspelled, should be renamed writablefile with deprecation for old name",arrow-1341 - deprecate arrow::maketable in favor of new ctor from arrow-1334,arrow-2555 - provide an option to convert on coerce_timestamps instead of error,arrow-2989 - remove deprecated apis in 0.10.0 and below,arrow-5308 - remove deprecated feather format,arrow-8904 - fix usages of deprecated c++ apis related to child/field,arrow-3129 - stop to use deprecated buildroot and group in .rpm,arrow-4789 - deprecate and and later remove arrow::io::readablefileinterface,arrow-8224 - remove apis deprecated prior to 0.16.0,arrow-5606 - pandas.rangeindex._start/_stop/_step are deprecated,arrow-4093 - deprecated method suggests wrong method,arrow-11790 - change plan builder signature to take vec<expr> rather than &,arrow-8561 - stop using deprecated google::protobuf::messagelite::bytesize,arrow-3971 - remove apis deprecated in 0.11 and prior,arrow-2614 - remove group: deprecated in travis,arrow-9289 - remove deprecated functions,arrow-5201 - import abcs from collections is deprecated in python 3.7,arrow-1758 - remove pickle=true option for object serialization,arrow-7528 - the pandas.datetime class and pandas.np are deprecated,arrow-9130 - add deprecated wrappers functions to a pyarrow/compat.py module for 1.0.0 that will be removed later,arrow-9018 - remove apis that were deprecated in 0.17.x and prior
Release notes - Albumentations Documentation
Changelog â€” Paramiko documentation, #1378: add support for the modern import location of mutablemapping to avoid the old location becoming deprecated in python 3.8. thanks to josh karpel for catch & patch., #356: add support for sha-2 based key exchange algorithm diffie-hellman-group-exchange-sha256 and mac algorithms hmac-sha2-256 and hmac-sha2-512., #1233: add support for encrypt-then-mac schemes and two newer diffie-hellman group key exchange algorithms . patch courtesy of edgar sousa.," #1041: modify logic around explicit disconnect messages, and unknown-channel situations, so that they rely on centralized shutdown code instead of running their own. this is at worst removing some unnecessary code, and may help with some situations where paramiko hangs at the end of a session. thanks to paul kapp for the patch.", #402: check to see if an ssh agent is actually present before trying to forward it to the remote end. this replaces what was usually a useless typeerror with a human-readable authenticationexception. credit to ken jordan for the fix and yvan marques for original report.," #951: add support for ecdh key exchange , specifically the algorithms ecdh-sha2-nistp256, ecdh-sha2-nistp384, and ecdh-sha2-nistp521. they now come before the older diffie-hellman-* family of kex algorithms in the preferred-kex list. thanks to shashank veerapaneni for the patch & pierce lopez for a follow-up.","this technically changes behavior, insofar as very slow auth steps >30s will now cause timeout exceptions instead of completing. we doubt most users will notice; those affected can simply give a higher value to auth_timeout.", #266: change numbering of transport channels to start at 0 instead of 1 for better compatibility with openssh & certain server implementations which break on 1-indexed channels. thanks to @egroeper for catch & patch., #979: update how we use cryptography s signature/verification methods so we aren t relying on a deprecated api. thanks to paul kehrer for the patch., #532: add support for curve25519 key exchange . thanks to alex gaynor and dan fuhry for supplying patches.," #267: add gss-api / sspi key exchange and authentication support . mega thanks to sebastian dei , with assist by torsten landschoff."," #667: the rc4/arcfour family of ciphers has been broken since version 2.0; but since the algorithm is now known to be completely insecure, we are opting to remove support outright instead of fixing it. thanks to alex gaynor for catch & patch."," #1060: fix key exchange algorithm list for gssapi authentication; previously, the list used solely out-of-date algorithms, and now contains newer ones listed preferentially before the old. credit: anselm kruis.", #1379: raise cryptography dependency requirement to version 2.5 and update some deprecated uses of its api.,"this removes a bunch of warnings of the style cryptographydeprecationwarning: encode_point has been deprecated on ellipticcurvepublicnumbers and will be removed in a future version. please use ellipticcurvepublickey.public_bytes to obtain both compressed and uncompressed point encoding and similar, which users who had eventually upgraded to cryptography 2.x would encounter."
Altair Change Log â€” Altair 4.1.0 documentation
Release notes â€” Scrapy 2.5.0 documentation,"in custom feed storage backend classes, __init__ method signatures that do not accept a keyword-only feed_options parameter are now deprecated ","there s been a large rearrangement of modules trying to improve the general structure of scrapy. main changes were separating various subpackages into new projects and dissolving both scrapy.contrib and scrapy.contrib_exp into top level packages. backward compatibility was kept among internal relocations, while importing deprecated modules expect warnings indicating their new place.",the following datatypes were deprecated :,deprecated runserver command in favor of server command which starts a scrapyd server. see also: scrapyd changes,"replaced memory usage acounting with resource module, removed scrapy.utils.memory module",spider.make_requests_from_url is deprecated .,removed deprecated core.signals.domain_open signal - use core.signals.domain_opened instead ,use of the undocumented scrapy_pickled_settings_to_override environment variable is deprecated ,the leveldb storage backend of httpcachemiddleware is deprecated ,the scrapy.utils.python.retry_on_eintr function is now deprecated ,remove deprecated code from feedexporter ,the scrapy.utils.datatypes.mergedict class is deprecated for python 3 code bases. use chainmap instead. ,fix deprecated settings api in tests ,"assertionerror exceptions triggered by assert statements have been replaced by new exception types, to support running python in optimized mode without changing scrapy s behavior in any unexpected ways.",fix deprecated crawlersettings and increase backward compatibility with .defaults attribute ,deprecated queue command in favor of using scrapyd schedule.json api. see also: scrapyd changes,changed item pipeline to use spiders instead of domains,"while these are not changes in scrapy itself, but rather in the parsel library which scrapy uses for xpath/css selectors, these changes are worth mentioning here. scrapy now depends on parsel >= 1.5, and scrapy documentation is updated to follow recent parsel api conventions.",removed all code that was deprecated in 1.7.0 and had not already been removed in 2.4.0. ,removed obsolete scrapy.utils.markup.remove_escape_chars function - use scrapy.utils.markup.replace_escape_chars instead ,deprecated scrapy.interfaces.ispidermanager is removed; please use scrapy.interfaces.ispiderloader.,the feed_format and feed_uri settings have been deprecated in favor of the new feeds setting ,use a mutable mapping to proxy deprecated settings.overrides and settings.defaults attribute ,the noconnect query string argument of proxy urls is deprecated and should be removed from proxy urls ,chunkedtransfermiddleware is deprecated and removed from the default downloader middlewares.,using environment variables prefixed with scrapy_ to override settings is deprecated ,the following deprecated settings have also been removed :,"by default, logger names now use a long-form path, e.g. , instead of the shorter top-level variant of prior releases ; this is backward incompatible if you have log parsers expecting the short logger name part. you can switch back to short logger names using log_short_names set to true.","removed support for the scrapy_pickled_settings_to_override environment variable, deprecated in 1.8.0. ","old domain argument has been deprecated and will be removed in 0.9. for spiders, you should always use the spider argument and pass spider references. if you really want to pass a string, use the component argument instead.","spider.make_requests_from_url, deprecated in scrapy 1.4.0, now issues a warning when used ",removed section on deprecated contrib/ ,"in custom media pipelines, signatures that do not accept a keyword-only item parameter in any of the methods that now support this parameter are now deprecated ",the scrapy.utils.python.weakkeycache class is now deprecated ,fix wrong checks on subclassing of deprecated classes ,changed stats api to use spiders instead of domains ,removed deprecated scrapy.item.scrapeditem class - use scrapy.item.item instead ,fixed deprecated uses of the twisted api. ,removed deprecated scrapysettings_module environment variable - use scrapy_settings_module instead ,deprecated settings.overrides and settings.defaults attributes are removed .,"the spiders property has been removed from crawler, use crawlerrunner.spider_loader or instantiate spider_loader_class with your settings instead ","added to_bytes and to_unicode, deprecated str_to_unicode and unicode_to_str functions .",deprecations and backward incompatible changes,update deprecated test aliases ,updated deprecated cgi.parse_qsl to use six s parse_qsl ,deprecated crawlersettings class is removed .,removed deprecated execution queue ,the previously bundled scrapy.xlib.pydispatch library was deprecated and replaced by pydispatcher.,the following deprecated apis have been removed :,"when uploading files or images to s3 , the default acl policy is now private instead of public warning: backward incompatible!. you can use files_store_s3_acl to change it.",the scrapy.utils.py36 module is now deprecated in favor of scrapy.utils.asyncgen. ,deprecations and removals,there are currently no plans to deprecate .extract and .extract_first methods.,concurrent_requests_per_spider setting has been deprecated and replaced by:
Changes â€” Werkzeug Documentation (2.1.x),overhauled the utilization of the input stream to be easier to use and better to extend. the detection of content payload on the input side is now more compliant with http by detecting off the content type header instead of the request method. this also now means that the stream property on the request class is always available instead of just when the parsing fails.,cgirootfix no longer modifies path_info for very old versions of lighttpd. lighttpdcgirootfix was renamed to cgirootfix in 0.9. both are deprecated and will be removed in version 1.0. ,fix an issue where sys.path would change between reloads when running with python -m app. the reloader can detect that a module was run with -m and reconstructs that instead of the file path in sys.argv when reloading. ,soft deprecated the data descriptors for request and response objects.,deprecated werkzeug.contrib.kickstart and werkzeug.contrib.testtools,"the deprecated num_proxies argument to proxyfix sets x_for, x_proto, and x_host to match 0.14 behavior. this is intended to make intermediate upgrades less disruptive, but the argument will still be removed in 1.0. #1630","deprecate support for python 2.6 and 3.3. ci tests will not run for these versions, and support will be dropped completely in the next version. ",removed support for deprecated non-silent usage of the limited stream object.,"middleware from werkzeug.wsgi has moved to separate modules under werkzeug.middleware, along with the middleware moved from werkzeug.contrib. the old werkzeug.wsgi imports are deprecated and will be removed in version 1.0. ",removed support for deprecated fix_headers.,"for example, instead of import werkzeug; werkzeug.url_quote, do from werkzeug.urls import url_quote. a deprecation warning will show the correct import to use. werkzeug.exceptions and werkzeug.routing should also be imported instead of accessed, but for technical reasons can t show a warning.",changed hashing methodology of immutable ordered multi dicts for a potential problem with alternative python implementations.,moved limitedstream from the contrib package into the regular werkzeug one and changed the default behavior to raise exceptions rather than stopping without warning. the old class will stick in the module until 0.6.,removed pending deprecations,"remove most top-level attributes provided by the werkzeug module in favor of direct imports. for example, instead of import werkzeug; werkzeug.url_quote, do from werkzeug.urls import url_quote. install version 0.16 first to see deprecation warnings while upgrading. #2, #1640",deprecate the useragents module and the built-in user agent parser. use a dedicated parser library instead by subclassing user_agent.useragent and setting request.user_agent_class. #2078,"the development server accepts paths that start with two slashes, rather than stripping off the first path segment. #491",the contrib modules are deprecated and will either be moved into werkzeug core or removed completely in version 1.0. some modules that already issued deprecation warnings have been removed. be sure to run or test your code with python -w default::deprecationwarning to catch any deprecated code you re using. ,removed support for is_behind_proxy. use a wsgi middleware instead that rewrites the remote_addr according to your setup. also see the werkzeug.contrib.fixers.proxyfix for a drop-in replacement.,deprecate most top-level attributes provided by the werkzeug module in favor of direct imports. the deprecated imports will be removed in version 1.0.,removed support for deprecated parameter for iter_encoded.,merge all request and response wrapper mixin code into single request and response classes. using the mixin classes is no longer necessary and will show a deprecation warning. checking isinstance or issubclass against baserequest and baseresponse will show a deprecation warning and check against request or response instead. #1963,test.environbuilder and test.client take a json argument instead of manually passing data and content_type. this is serialized using the test.environbuilder.json_dumps method. ,removed support for deprecated header_list.
Release Notes â€” Featuretools 0.24.0 documentation,replace pd.timedelta time units that were deprecated ,entity.query_by_values has been removed and replaced by entityset.query_by_values with an added entity_id parameter to specify which entity in the entityset should be used for the query.,the text variable type has been deprecated and been replaced with the naturallanguage variable type. the text variable type will be removed in a future release.,use logger.warning to fix deprecated logger.warn ,"removed feature.get_names, feature.get_feature_names should be used instead",remove list of times as on option for cutoff_time in calculate_feature_matrix ,add dtype to interesting_values to fix deprecated empty series with no dtype 
Changelog â€” gevent 21.1.3.dev0 documentation,deprecations and removals
Changelog â€” marshmallow 3.12.1 documentation,queryselect and queryselectlist are deprecated . these fields will be removed in version 2.1.,"the arbitrary, price, and fixed fields are deprecated in favor of the decimal field .",remove make_object. use a post_load method instead .,backwards-incompatible: utils.from_iso is deprecated in favor of utils.from_iso_datetime . thanks @sklarsa.,the validator functions in the validate module are deprecated in favor of the class-based validators .,marshmallow.pprint is deprecated and will be removed in marshmallow 4 .,fix deprecated functions compatibility with python 2 . thanks @airstandley for the catch and patch.,add warnings for api that is deprecated or changed to help users prepare for marshmallow 3 .,make_object is deprecated. use a post_load method instead . this method will be removed in the final 2.0 release.,the select/enum field is deprecated in favor of using validate.oneof validator .,passing field metadata via keyword arguments is deprecated and will be removed in marshmallow 4 . use the explicit metadata=... argument instead. thanks @sirosen.,marshallingerror and unmarshallingerror error are deprecated in favor of a single validationerror .
Release History - Stanza
Change log â€” Docker SDK for Python 5.0.0 documentation,client.execute is being deprecated in favor of the more dev-friendly client.exec_start and client.exec_create. it will be removed in 1.3.0,client.insert is deprecated in api version > 1.11,"create_host_config, create_ipam_pool and create_ipam_config have been removed from docker.utils. they have been replaced by the following classes in docker.types: hostconfig, ipampool and ipamconfig.",replace use of deprecated filter argument on docker/api/image ,docker.utils.create_host_config is deprecated in favor of client.create_host_config.,endpoint_config in create_service and update_service has been deprecated in favor of endpoint_spec
Upgrade Guide â€” CuPy 9.0.0 documentation,cupy.sparse module has been deprecated and will be removed in future releases. use cupyx.scipy.sparse instead.,"cupy.scatter_add, which was deprecated in cupy v4, has been removed. use cupyx.scatter_add instead.","for performance reasons, cupy.count_nonzero has been changed to return zero-dimensional ndarray instead of int when axis=none. see the discussion in #154 for more details."
Changelog â€” Jedi 0.18.0 documentation,the line and column parameters of jedi.script are now deprecated
Asyncpg Changelog - pyup.io," * remove the deprecated ""binary"" parameter from `connection.set_type_codec`"," * add support for ""tuple"" exchange format for codec overrides."
Changelog (Version History) â€” Telethon 1.21.1 documentation,"the library was accidentally using a deprecated argument in one of its friendly methods, producing a warning.","other internal changes include a somewhat more readable .to_bytes function and pre-computing the flag instead using bit shifting. the tlobject.constructor_id has been renamed to tlobject.constructor_id, and .subclass_of_id is also uppercase now.","the same applies to .download_msg_media, which has been renamed to .download_media. the method now supports a message itself too, rather than only message.media. the specialized .download_photo, .download_document and .download_contact still exist, but are private.","besides the obvious layer change, the loop argument is now ignored. it has been deprecated since python 3.8 and will be removed in python 3.10, and also caused some annoying warning messages when using certain parts of the library. if you were relying on using a different loop from the one that was set, things may break.",some important internal changes are that the old way to deal with rsa public keys now uses a different module instead the old strange hand-crafted version.,".sender is the .chat when the message is sent in a broadcast channel. this makes sense, because the sender of the message was the channel itself, but you now must take into consideration that it may be either a user or channel instead of being none."
Changelog â€” librosa 0.8.0 documentation,deprecations to be removed in 0.9,logamplitude is deprecated in favor of amplitude_to_db or power_to_db. the ref_power parameter has been renamed to ref.,removed deprecated ifgram function.,removed deprecated util.roll_sparse function,librosa.util.example_audio_file is now deprecated in favor of librosa.util.example.,fixed issue #102: segment.agglomerative no longer depends on the deprecated ward module of sklearn; it now depends on the newer agglomerative module.,deprecation and moved-function warnings,#1165 removed deprecated optional_jit decorator,"spectrogram frames are now centered, rather than left-aligned. this removes the need for window correction in librosa.frames_to_time",onset_strength parameter centering has been deprecated and renamed to center ,deprecated functions,removed deprecated amin parameter from icqt,"removed deprecated a440 parameter from hz_to_octs, octs_to_hz, and chroma features",removed the deprecated output module.
Release History â€” virtualenv 20.4.6.dev2+g7bfd444 documentation
Release history â€” Trio 0.18.0+dev documentation,"trio 0.2.0 contains changes from 14 contributors, and brings major new features and bug fixes, as well as a number of deprecations and a very small number of backwards incompatible changes. we anticipate that these should be easy to adapt to, but make sure to read about them below, and if you re using trio then remember to read and subscribe to issue #1.",remove blockingtrioportal: it was deprecated in 0.12.0. ,remove deprecated max_refill_bytes from sslstream. ,"trio 0.1.0 provided a set of built-in mechanisms for waiting for and tracking the result of individual tasks. we haven t yet found any cases where using this actually led to simpler code, though, and this feature is blocking useful improvements, so the following are being deprecated without replacement:","if you want to create a trio.process object, you now have to call trio.open_process; calling trio.process directly was deprecated in v0.12.0 and has now been removed. ",remove the deprecated trio.hazmat module. ,remove clear method on trio.event: it was deprecated in 0.12.0. ,"remove all the apis deprecated in 0.9.0 or earlier , trio.brokenstreamerror, and trio.resourcebusyerror), except for trio.hazmat.unboundedqueue, which stays for now since it is used by the obscure lowlevel functions monitor_completion_queue and monitor_kevent. ","add support for contextvars , and add trio.hazmat.runvar as a similar api for run-local variables. deprecate trio.tasklocal and trio.hazmat.runlocal in favor of these new apis. ",removed everything that was deprecated in 0.2.0; see the 0.2.0 release notes below for details.,remove the deprecated trio.ssl and trio.subprocess modules. ,stop allowing subclassing public classes. this behavior was deprecated in 0.15.0. ,remove all the apis deprecated in 0.3.0 and 0.4.0. ,current_default_worker_thread_limiter is deprecated in favor of trio.to_thread.current_default_thread_limiter. ,remove the deprecated tiebreaker argument to trio.testing.wait_all_tasks_blocked. ,"trio.catch_signals has been deprecated in favor of open_signal_receiver. the main differences are: it takes *-args now to specify the list of signals instead of catch_signals), and, the async iterator now yields individual signals, instead of batches ","trio is a young and ambitious project, but it also aims to become a stable, production-quality foundation for async i/o in python. therefore, our approach for now is to provide deprecation warnings where-ever possible, but on a fairly aggressive cycle as we push towards stability. if you use trio you should read and subscribe to issue #1. we d also welcome feedback on how this approach is working, whether our deprecation warnings could be more helpful, or anything else.",deprecations and removals,"remove wait_socket_*, notify_socket_closing, notify_fd_closing, run_sync_in_worker_thread and current_default_worker_thread_limiter. they were deprecated in 0.12.0. ",blockingtrioportal has been deprecated in favor of the new trio.from_thread. ,remove trio.open_cancel_scope which was deprecated in 0.11.0. ,run_sync_in_worker_thread is deprecated in favor of trio.to_thread.run_sync. ,"there are also some classes that were explicitly designed to be subclassed, like the ones in trio.abc. subclassing these is still supported. however, for all other classes, attempts to subclass will now raise a deprecation warning, and in the future will raise an error.",remove the apis deprecated in 0.5.0. ,trio.queue's join and task_done methods are deprecated without replacement ,"deprecate trio.open_cancel_scope in favor of trio.cancelscope, which more clearly reflects that creating a cancel scope is just an ordinary object construction and does not need to be immediately paired with entering it. ",breaking changes and deprecations,"resourcebusyerror is now a deprecated alias for the new busyresourceerror, and brokenstreamerror is a deprecated alias for the new brokenresourceerror. "
Changelog - isort,"potentially interface breaking: - the -r option for removing imports has been renamed -rm to avoid accidental deletions and confusion with the -rc recursive option. - __init__.py has been removed from the default ignore list. the default ignore list is now empty - with all items needing to be explicitly ignored. - isort will now by default ignore .tox / venv folders in an effort to be ""safe"". you can disable this behaviour by setting the ""--unsafe"" flag, this is separate from any skip or not skip rules you may have in place. - isort now allows for files missing closing newlines in whitespace check - distutils support has been removed to simplify setup.py",--apply option has been removed as it is the default behaviour.,fixed #1192: -k or --keep-direct-and-as-imports option has been deprecated as it is now always on.,fixed #1447: isort5 throws error when stdin used on windows with deprecated args.,improved handling of deprecated single line variables for usage with visual studio code ,safety_excludes and unsafe have been deprecated,added warning for deprecated cli flags and linked to upgrade guide.
Release Notes â€” MechanicalSoup 1.0.0 documentation,"statefulbrowser has new properties page, form, and url, which can be used in place of the methods get_current_page, get_current_form and get_url respectively ). these methods may be deprecated in a future release. ","constructing a form instance from a bs4.element.tag whose tag name is not form will now emit a warning, and may be deprecated in the future. ",set_checkbox and set_radio together deprecate check 
Release Notes - mlxtend,"the stackingclassifier has a new parameter average_probas that is set to true by default to maintain the current behavior. a deprecation warning was added though, and it will default to false in future releases ; average_probas=false will result in stacking of the level-1 predicted probabilities rather than averaging these.","the sequentialfeatureselector estimator in mlxtend.feature_selection now is safely stoppable mid-process by control+c, and deprecated print_progress in favor of a more tunable verbose parameter ",the previously deprecated onehottransactions has been removed in favor of the transactionencoder.,the plot_confusion_matrix function now has the ability to show normalized confusion matrix coefficients in addition to or instead of absolute confusion matrix coefficients with or without a colorbar. the text display method has been changed so that the full range of the colormap is used. the default size is also now set based on the number of classes.,changed the default solver in principalcomponentanalysis to 'svd' instead of 'eigen' to improve numerical stability. ,fixed an deprecation error that occured with mcnemar test when using scipy 1.0. ,the onehottransactions has been deprecated and replaced by the transactionencoder. (#332,switched to using raw strings for regex in mlxtend.text to prevent deprecation warning in python 3.8 
Version history â€” APScheduler 3.7.0 documentation,deprecated the various version related variables in the apscheduler module ,"changed asyncioscheduler to obtain the event loop in start instead of __init__, to prevent situations where the scheduler won t run because it s using a different event loop than then one currently running",fixed deprecation warnings on the mongodb job store and increased the minimum pymongo version to 3.0
Changelog â€” websockets 9.0 documentation,version 9.0 moves or deprecates several apis.,changed the origins argument to represent the lack of an origin with none rather than ''.,changed websocketserver.close to perform a proper closing handshake instead of failing the connection.,"version 8.0 deprecates the host , port , and secure attributes of websocketcommonprotocol.","in order to avoid stranding projects built upon an earlier version, the previous behavior can be restored by passing legacy_recv=true to serve, connect, websocketserverprotocol, or websocketclientprotocol. legacy_recv isn t documented in their signatures but isn t scheduled for deprecation either."
Changelog - LSP Mode - LSP support for Emacs,changed flymake to report the errors immediately after they arrive instead of waiting flymake to call lsp-mode.
What's New, changed the behaviour of clock.tick to use sdl_delay instead of a busy," fixed in _numpysurfarray.py, ignored in deprecated _numericsurfarray.c.", replace ambiguous switch statement default clauses with specific comments, cd.play can now take an option start and end time, add deprecation warning for numeric in surfarray and sndarray., replace another ambiguous switch statement default clause, move locals.doc and remove redundant constant descriptions. instead refer
Release Notes :: NVIDIA Deep Learning DALI Documentation,deprecated the following as noted below:,deprecated features,"the api for the tensorflow plugin changed to allow specifying the whole shape of the tensor instead of n, h, and w separately; which enables handling both nchw and nhwc outputs.",deprecated `output_dtype` and use `dtype` .,colortwist operator was deprecated and replaced by brightnesscontrast and hsv operators cleanup ,"replaced hostdecoder and nvjpegdecoder with generic imagedecoder. imagedecoder is the recommended function for the image decoding, and the replaced apis hostdecoder and nvjpegdecoder will be removed in the future.",support operators were removed and their usage replaced with cpu operators. old support operators were converted to cpu operators.,deprecate the squeeze_labels option from mxnet iterator and enhanced the .squeeze function to match the numpy-style interface ,removed the following deprecated operators:,here are the features that were deprecated in this release:,deprecated normalizepermute in favor of cropmirrornormalize,there are no deprecated features in this release.,the following features have been deprecated in this dali release:,removed the deprecated use of ltrb in bboxrandomcrop .,"added an argument deprecation mechanism and deprecated ""image_type"" in crop, slice, and cropmirrornormalize .",there are no deprecated features in this dali release.,adjusted operator::run to take reference instead of pointer .
Changelog â€” Dramatiq 1.10.0 documentation,deprecated
Cerberus Changelog â€” Cerberus is a lightweight and extensible data validation library for Python,change allowed rule to use containers instead of lists ,replaced deprecated rule name validator with check_with in the docs ,fixed the expansion of the deprecated rule names keyschema and valueschema ," nullable rule added to allow for null field values to be accepted in validations. this is different than required in that you can actively change a value to none instead of omitting or ignoring it. it is essentially the ignore_none_values, allowing for more fine grained control down to the field level .",the rules keyschema and valueschema are renamed to keysrules and valuesrules; the old names are deprecated and will not be available in the next major release of cerbers , validate_update is deprecated and will be removed with next release. use validate with update=true instead. closes #21.,the validator rule is renamed to check_with. the old name is deprecated and will not be available in the next major release of cerberus 
Changelog â€” Authlib 1.0.0.dev documentation,"in flask oauth 2.0 provider, we have removed the deprecated oauth2_jwt_xxx configuration, instead, developers should define .get_jwt_config on openid extensions and grant types.",breaking changes: find how to solve the deprecate issues via link
Changelog â€” pygal 2.0.0 documentation,mode option has been renamed to a less generic name: box_mode,add show_x_labels option to remove them and the x axis.,"there is now a formatter config option to format values as specified. the formatter callable may or may not take chart, serie and index as argument. the default value formatting is now chart dependent and is value_formatter for most graph but could be a combination of value_formatter and x_value_formatter for dual charts.","remove datey and replace it by real xy datetime, date, time and timedelta support. "
Changelog â€” ELI5 0.11.0 documentation,don t use deprecated getargspec function.
Changelog â€” LIEF Documentation
Thinc Changelog - pyup.io, * use `collections.abc` when possible and avoid deprecation warning.
pyserial/CHANGES.rst at master Â· pyserial/pyserial Â· GitHub,"improved xreadlines, it is now a generator function that yields lines as they are received . however xreadlines is deprecated and not available when the io module is used. use for line in serial: instead."," examples: refactor wx example, use bind to avoid deprecated warnings, ischecked, unichr","deprecate nonblocking method on posix, the port is already in this mode."
Pychromecast Changelog - pyup.io, - **breaking change** remove blocking option from chromecast emontnemery, * breaking change track services based on uuid instead of mdns service name emontnemery,breaking change track services based on uuid instead of mdns service name emontnemery
Changelog â€” Urwid 2.1.2,don t use deprecated inspect.getargspec with python3 ,removed util.register_align_mode and util.register_wrap_mode. their functionality has been replaced by the new layout classes.,deprecated classes
Change history â€” Kombu 5.0.2 documentation,the deprecated method consumer.add_queue_from_dict has been removed.,connection: there s now a new method connection.supports_exchange_type that can be used to check if the current transport supports a specific exchange type.,sqlalchemy transport: use query.with_for_update instead of deprecated,"if when publishing a message, the exchange argument is set to , the routing_key will be regarded as the destination queue.","added integration tests for direct, topic and fanout exchange types",when enabled the exchange will work like an amqp topic exchange if the binding key is a pattern.,simplequeue now allows you to override the exchange type used.,the deprecated function kombu.serialization.encode has been removed.,add possibility to optimize lookup for queue in direct exchange set.,removed deprecated use of stopiteration in generators and invalid regex escape sequence.,queue_bind is no longer called for queues bound to the default exchange .,"the polling interval default has been changed to 0 and a new transport option has been added. this parameter specifies how long to wait for a message from sqs, and defaults to 20 seconds, which is the maximum value currently allowed by amazon sqs.",consumer: adds tag_prefix option to modify how consumer tags are generated .,redis: the fanout exchange can now use amqp patterns to route and filter messages.,"cjson is no longer a recommended json implementation, and anyjson will now emit a deprecation warning if used.",memory transport now supports the fanout exchange type.,new and better repr for queue and exchange objects.,exchange & queue can now be bound to connections :,"tests no longer depends on distribute, which was deprecated and merged back into setuptools.",the deprecated function kombu.serialization.decode has been removed.,deprecations and removals,"setting this flag means that the exchange will not be declared by kombu, but that it must exist already ."
Changelog â€” django-import-export 2.5.1.dev0 documentation,"try to use ordereddict instead of sorteddict, which is deprecated in django 1.7 ",fix deprecated django 3.0 function usage ,fix: warning u mode is deprecated in python 3 
Release Notes â€” Catalyst 0.5.21 documentation,raising an error for order amounts smaller than exchange lots,"changed handling of empty auth.json, instead of throwing an error for missing file",added a standardized dictionary of symbols for each exchange,"retrieval of crypto benchmark from bundle, instead of hitting poloniex exchange directly",multiple algorithms can trade simultaneously against a single exchange using the same account.
viewflow/CHANGELOG.rst at master Â· viewflow/viewflow Â· GitHub,"all conditions in if, switch and other nodes receives now a node activation instance instead of process. so you can gen an access to the current task via activation.task variable."
News â€” pyquery 1.3.x documentation
furl v2.0.0 release notes (2018-10-16) | LibHunt
Whatâ€™s New â€” xlwings dev documentation,pandas deprecation warnings have been fixed ," the interpreter setting has been deprecated in favor of platform-specific settings: interpreter_win and interpreter_mac, respectively. this allows you to use the sheet config unchanged on both platforms .",: vba settings: udf_path has been replaced with udf_modules. the default behaviour doesn t change though .
instagram_private_api/CHANGELOG.md at master Â· ping/instagram_private_api Â· GitHub,deprecated and experimental endpoints now warned with clientdeprecationwarning and clientexperimentalwarning.,client.standard_ratios and client.reel_ratios is deprecated and replaced with mediaratios.standard and mediaratios.reel respectively.
Changelog â€” aeneas 1.7.3 documentation,updated install.md to brew install from daniel bair s tap instead of official brew repo since they removed the formula for aeneas ,fixed the numpy deprecated api warning for c extensions
orjson/CHANGELOG.md at master Â· ijl/orjson Â· GitHub
pex/CHANGES.rst at main Â· pantsbuild/pex Â· GitHub,"finally, the long deprecated exposure of the pex apis through _pex has been removed. to use the pex apis you must include pex as a dependency in your pex file.","the --cache-dir setting is deprecated in favor of build time control of the cache location with --pex-root and new support for control of the cache's runtime location with --runtime-pex-root is added. as in the past, the pex_root environment variable can still be used to control the cache's runtime location.",remove long deprecated support for _pex module. pr #1135,"this release upgrades pex to the latest pip which includes support for the new 2020-resolver (see: link as well as support for macos bigsur. although this release defaults to the legacy resolver behavior, the next release will deprecate the legacy resolver and support for the legacy resolver will later be removed to allow continuing pip upgrades going forward. to switch to the new resolver, use: --resolver-version pip-2020-resolver.","this ordinarily should not be a problem but the zipimporter caches metadata by filename instead of stat/sha, so if the underlying contents changed a runtime error would be thrown due to seemingly corrupt zip file offsets. rb #684",the resolver api removed precedence which is now pip default precedence: wheels when available and not ruled out via the --no-wheel cli option or use_wheel=false api argument.,breaking change: removes the -s option in favor of specifying directories directly as arguments to the pex command line.,"the 1.0.0 release of pex introduces a few breaking changes: pex -r now takes requirements.txt files instead of requirement specs, pex -s has now been removed since source specs are accepted as arguments, and pex -p has been removed in favor of its alias pex -o."
PyFunctional/CHANGELOG.md at master Â· EntilZha/PyFunctional Â· GitHub,added data interchange tutorial with pandas (link
javacpp-presets/CHANGELOG.md at master Â· bytedeco/javacpp-presets Â· GitHub,remove calls to deprecated functions from sample code for ffmpeg ,deprecate slow get and put methods of cvmat in favor of the fast ones from createindexer ,"remove unneeded @opaque types from gsl and replace them with their definitions whose names end with ""_struct""",deprecate get*buffer methods in favor of a better named and generic createbuffer method
PyLaTeX/changelog.rst at master Â· JelteF/PyLaTeX Â· GitHub,for better readability let ~.escape_latex change a newline to \\%\n instead of simply \\.,the table object is going to be deprecated in favor of the better named .tabular object. this will take a couple of releases.
essentia/Changelog at master Â· MTG/essentia Â· GitHub
Changelog â€” Apache Libcloud 3.3.2-dev documentation,replace old enum style provider constants and replace them with a string version. this change allows users to dynamically register new drivers using a new set_driver method. ,modify get_container method to use a more efficient head approach instead of calling list_containers + doing late filterting. ,"deprecate lazylist method of iteration over large paginated collections and use a new, more efficient generator based approach which doesn t require the iterator to be pre-exhausted and buffering all of the values in memory.","deprecate rackspace_us and rackspace_uk provider constant and replace it with a new rackspace constant. driver referenced by this new constant takes a region keyword argument which can be one of the following: us , uk .",openstack driver: deprecated ex_create_snapshot and ex_delete_snapshot in favor of create_volume_snapshot and destroy_volume_snapshot. updated base driver method create_storage_volume argument name to be optional. ,remove public_ip and private_ip property which has been deprecated in 0.7.0 from the node object. ,modify openstackauthconnection and change auth_token_expires attribute to be a datetime object instead of a string. ,remove deprecated provider constants with the region in the name and related driver classes .,"deprecate cloudfiles_us and cloudfiles_uk provider constant and replace it with a new cloudfiles constant. driver referenced by this new constant takes a region keyword argument which can be one of ord , dfw , iad , syd , lon .",note: deprecated argument will continue to work until the next major release. ,"deprecate the following ec2 provider constants: ec2_us_east, ec2_eu, ec2_eu_west, ec2_ap_southeast, ec2_ap_northeast, ec2_us_west_oregon, ec2_sa_east, ec2_sa_east and replace it with a new ec2 constant. driver referenced by this new constant now takes a region argument which dictates to which region to connect.",add deprecated attribute to the node object in the google compute engine driver. ,"deprecated ibm sce, hp helion, opsource, ninefold and cloudframes drivers, removed driver code and tests. ",modify openstackauthconnection to support re-using of the existing auth token if it s still valid instead of re-authenticating on every authenticate call. ,"switch rawresponse class to use content body instead of text body, up to 10x performance improvement for methods like storagedriver.download_object ", update gce and softlayer drivers to utilize crypto primitives from the cryptography library instead of deprecated and unmaintained pycrypto library.,modify values in the record extra dictionary attribute in the zerigo dns driver to be set to none instead of an empty string if a value for the provided key is not set. ,"previously, that driver followed driver class per region approach. that approach will be deprecated and removed in a future release.",align joyent driver with other drivers and deprecate location argument in the driver constructor in favor of region argument.,"current opennebula occi implementation does not support a proper restart method. rather it suspends and resumes. therefore, restart_node has been removed from the opennebula driver. ",remove old deprecated paths. ,"deprecate the following elastichosts provider constants: elastichosts_uk1, elastichosts_uk2, elastichosts_us1, elastichosts_us2, elastichosts_us3, elastichosts_ca1, elastichosts_au1, elastichosts_cn1 and replace it with a new elastichosts constant. driver referenced by this new constant now takes a region argument which dictates to which region to connect.", update oneandone driver to accomodate latest changes to the api. this means removing deprecated ex_remove_server_firewall_policy method and replacing port_from and port_to argument on the firewall policy with a single port attribute. ,deprecated lockfile library which is used by the local storage driver has been replaced with fasteners library. ,"deprecate rackspace_us and rackspace_uk provider constant and replace it with a new rackspace constant. driver referenced by this new constant takes a region keyword argument which can be one of the following: ord , dfw , iad , syd , lon .",modify elasticstack driver class to pass vnc auto instead of vnc:ip auto argument to the api when creating a server. it looks like vnc:ip has been replaced with vnc . ,introduced error messages for deprecated drivers ,existing apis directly on the libcloud.* module have been deprecated and will be removed in version 0.6.0. most methods were moved to the libcloud.compute.* module.
scrapely/NEWS at master Â· scrapy/scrapely Â· GitHub,- replaced deprecated functions
filterpy/changelog.txt at master Â· rlabbe/filterpy Â· GitHub,"* deprecated plot_gaussian in favor of plot_gaussian_pdf,",* removed deprecated filterpy.kalman.saver class (use 
pgmpy/CHANGELOG.md at dev Â· pgmpy/pgmpy Â· GitHub
Release notes Â· andrewssobral/bgslibrary Wiki Â· GitHub
stumpy/CHANGELOG.md at main Â· TDAmeritrade/stumpy Â· GitHub,removed all aamp references as normalize=false should be used instead
Voluptuous Changelog - pyup.io
Changelog â€” Tenacity documentation
python-miio/CHANGELOG.md at master Â· rytilahti/python-miio Â· GitHub,vacuum: vacuumstate's 'dnd' and 'in_cleaning' properties are deprecated in favor of 'dnd_status' and 'is_on'.,"this release adds support for several new devices, and contains improvements and fixes on several existing integrations. instead of summarizing all changes here, this library seeks to move completely automated changelogs based on the pull request tags to facilitate faster release cycles. until that happens, the full list of changes is listed below as usual.","this release also changes the behavior of vacuum's got_error property to signal properly if an error has occured. the previous behavior was based on checking the state instead of the error number, which changed after an error to 'idle' after a short while.",vacuum: returning a list for clean_details is deprecated and to be removed in the future.,"this release removes the version pinning for ""construct"" library as its api has been stabilized and we don't want to force our downstreams for our version choices. another notable change is dropping the ""mirobo"" package which has been deprecated for a very long time, and everyone using it should have had converted to use ""miio"" already. furthermore the client tools work now with click's version 7+."
NumCpp: Release Notes
Rauth Changelog â€” rauth 0.7.2 documentation
abseil-py/CHANGELOG.md at master Â· abseil/abseil-py Â· GitHub
shodan-python/CHANGELOG.md at master Â· achillean/shodan-python Â· GitHub,remove deprecated api wrapper for shodanhq.com/api
Changelog â€” dateutil 2.8.1 documentation,"deprecated zoneinfo.gettz due to confusion with tz.gettz, in favor of get method of zoneinfo.zoneinfofile objects. ","changed many aspects of dealing with the zone info file. instead of a cache, all the zones are loaded to memory, but symbolic links are loaded only once, so not much memory is used.",changed python setup.py test to print an error to stderr and exit with 1 instead of 0. reported and fixed by @hroncok ,moved parser module into parser/_parser.py and officially deprecated the use of several private functions and classes from that module. ,"fixed deprecated escape characters in regular expressions. reported by @nascheme and @thierryba , fixed by @thierryba ",several deprecated functions were replaced in the tests by @moreati ,the use of both the until and count parameters is now deprecated as inconsistent with rfc2445 ,"deprecated the idiosyncratic tzstr format mentioned in several examples but evidently designed exclusively for dateutil, and very likely not used by any current users. "
Changelog â€” PyCryptodome 3.9.9 documentation,added rsa.import_key as an alias to the deprecated rsa.importkey .,introduced export_key and deprecated exportkey for dsa and rsa key objects., removed implementation of deprecated quick check feature of pgp block cipher mode.
aiyprojects-raspbian/CHANGES.md at aiyprojects Â· google/aiyprojects-raspbian Â· GitHub
Releases Â· patrikhuber/eos Â· GitHub
Changelog â€” AmpliGraph 1.3.0 documentation
4. Release Notes â€” Buildbot 3.1.1 documentation,removed deprecated status configuration setting.,removed deprecated encoding argument to bitbucketpullrequestpoller.,"removed support for deprecated loghorizon, eventhorizon and buildhorizon configuration settings.",the deprecated buildbot.status module has been removed.,removed deprecated buildbot.test.fake.httpclientservice.httpclientservice.getfakeservice function.,removed support for deprecated nextworker function signature that accepts two parameters instead of three.,"removed deprecated support for template_filename, template_dir and subject_filename configuration parameters of message formatters.",removed support for deprecated builder categories which have been replaced by tags.,the deprecated send function that can be overridden by custom reporters has been removed.,removed support for the following deprecated parameters of messageformatter report formatter: template_name.,"the deprecated mtr step has been removed. contributors are welcome to step in, migrate this step to newer apis and add a proper test suite to restore this step in buildbot.",removed deprecated support for constructing build steps from class and arguments in buildfactory.addstep.,removed deprecated support for block_device_map argument of ec2latentworker being not a list.,removed support for deprecated db_poll_interval configuration setting.
Release Downloads | volatilityfoundation
CHANGELOG â€” rqalpha 4.3.x æ–‡æ¡£
Release Notes â€” nameko 2.12.0 documentation,add the ability to specify a custom servicecontainer class via config key. deprecate the keyword arguments to servicerunner and run_services for the same purpose.,"deprecate the keyword arguments to run_services, servicecontainer and servicerunner.add_service for specifying a custom workercontext class. custom workercontext classes can now only be specified with a custom servicecontainer class that defines the worker_ctx_cls attribute.","class attributes for configuring use_confirms, retry and retry_policy have been deprecated from the publisher, eventdispatcher, and rpc methodproxy classes. if you were subclassing these classes to set these options, you should now set them at class instantiation time."
